{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Clinics Components\\\\ClinicForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport TextInputCustom from \"../../Re-usable/FormComponents/TextInputCustom\";\nimport { messages, registerObject } from \"../../../Common Functions/FormObjects\";\nimport { getAllClinics, getClinic, postClinic } from \"./Clinics Functions/ClinicsFunctions\";\n\nfunction ClinicForm(props) {\n  _s();\n\n  const history = useHistory();\n  const {\n    handleSubmit,\n    errors,\n    reset,\n    register\n  } = useForm();\n  const [clinic, setClinic] = useState();\n  const [loading, setLoading] = useState(false);\n  const clinicId = props.match !== undefined ? props.match.params.id : null;\n  useLayoutEffect(() => {\n    if (clinicId !== null) {\n      setLoading(true);\n      getClinic(clinicId, setClinic).then(() => {\n        setLoading(false);\n      });\n    } else setLoading(true);\n  }, []);\n\n  function onSubmit(data, e) {\n    if (props.match !== undefined) data = { ...data,\n      id: props.match.params.id\n    };\n    postClinic(data).then(() => {\n      e.target.reset();\n      getAllClinics();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" clinic-form-container\",\n    children: loading === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user info . . . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"edit clinic \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"previous name : \", clinic.clinicName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 74\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClinicForm, \"Z+Y4sXu1vX8Czz6eMAJD5GBSvng=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = ClinicForm;\nexport default ClinicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClinicForm\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Clinics Components/ClinicForm.js"],"names":["React","useLayoutEffect","useState","useForm","useHistory","TextInputCustom","messages","registerObject","getAllClinics","getClinic","postClinic","ClinicForm","props","history","handleSubmit","errors","reset","register","clinic","setClinic","loading","setLoading","clinicId","match","undefined","params","id","then","onSubmit","data","e","target","clinicName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACE,SAAQC,UAAR,QAAyB,cAAzB;AACF,OAAOC,eAAP,MAA4B,gDAA5B;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,uCAAvC;AACA,SAAQC,aAAR,EAAuBC,SAAvB,EAAkCC,UAAlC,QAAmD,sCAAnD;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM;AAACU,IAAAA,YAAD;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,MAA0Cd,OAAO,EAAvD;AAIA,QAAM,CAACe,MAAD,EAAQC,SAAR,IAAmBjB,QAAQ,EAAjC;AAGA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMoB,QAAQ,GAAGV,KAAK,CAACW,KAAN,KAAgBC,SAAhB,GAA4BZ,KAAK,CAACW,KAAN,CAAYE,MAAZ,CAAmBC,EAA/C,GAAoD,IAArE;AAEAzB,EAAAA,eAAe,CAAC,MAAM;AAElB,QAAIqB,QAAQ,KAAK,IAAjB,EAAuB;AACnBD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,MAAAA,SAAS,CAACa,QAAD,EAAWH,SAAX,CAAT,CAA+BQ,IAA/B,CAAoC,MAAM;AACtCN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAFD;AAGH,KALD,MAOIA,UAAU,CAAC,IAAD,CAAV;AAIP,GAbc,EAaZ,EAbY,CAAf;;AAgBA,WAASO,QAAT,CAAkBC,IAAlB,EAAwBC,CAAxB,EAA2B;AACvB,QAAIlB,KAAK,CAACW,KAAN,KAAgBC,SAApB,EACIK,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAAUH,MAAAA,EAAE,EAAEd,KAAK,CAACW,KAAN,CAAYE,MAAZ,CAAmBC;AAAjC,KAAP;AAEJhB,IAAAA,UAAU,CAACmB,IAAD,CAAV,CAAiBF,IAAjB,CAAsB,MAAI;AACtBG,MAAAA,CAAC,CAACC,MAAF,CAASf,KAAT;AACAR,MAAAA,aAAa;AAChB,KAHD;AAMH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cACKY,OAAO,KAAK,KAAZ,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,gBAA4D;AAAA,8BACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADyD,eAEzD;AAAA,uCAAqBF,MAAM,CAACc,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFyD;AAAA;AAAA;AAAA;AAAA;AAAA;AADjE;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GArEQrB,U;UACWP,U,EACgCD,O;;;KAF3CQ,U;AAuET,eAAeA,UAAf","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n  import {useHistory} from \"react-router\";\r\nimport TextInputCustom from \"../../Re-usable/FormComponents/TextInputCustom\";\r\nimport {messages, registerObject} from \"../../../Common Functions/FormObjects\";\r\nimport {getAllClinics, getClinic, postClinic} from \"./Clinics Functions/ClinicsFunctions\";\r\n\r\nfunction ClinicForm(props) {\r\n    const history = useHistory();\r\n    const {handleSubmit, errors, reset, register} = useForm();\r\n\r\n\r\n\r\n    const [clinic,setClinic]=useState();\r\n\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const clinicId = props.match !== undefined ? props.match.params.id : null\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        if (clinicId !== null) {\r\n            setLoading(true)\r\n            getClinic(clinicId, setClinic).then(() => {\r\n                setLoading(false)\r\n            })\r\n        }\r\n        else\r\n            setLoading(true)\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    function onSubmit(data, e) {\r\n        if (props.match !== undefined)\r\n            data = {...data, id: props.match.params.id}\r\n\r\n        postClinic(data).then(()=>{\r\n            e.target.reset();\r\n            getAllClinics();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\" clinic-form-container\">\r\n            {loading === false   ? <div>Loading user info . . . .</div>: <div>\r\n                <h4>edit clinic </h4>\r\n                <h5>previous name : {clinic.clinicName}</h5>\r\n            </div>}\r\n            {/*{clinicId &&*/}\r\n            {/*<div>*/}\r\n            {/*    <h4>edit clinic </h4>*/}\r\n            {/*    <h5>previous name : {clinic.clinicName}</h5>*/}\r\n            {/*</div>*/}\r\n            {/*}*/}\r\n\r\n\r\n            {/*{*/}\r\n            {/*    loading &&*/}\r\n            {/*    <>*/}\r\n            {/*        <h1 className=\"mainTitle\">Add Clinic</h1>*/}\r\n            {/*        <p className=\"font-weight-bold\">Choose a unique clinic name</p>*/}\r\n            {/*        <form onSubmit={handleSubmit(onSubmit)} className=\"w-75\">*/}\r\n            {/*            <TextInputCustom field=\"clinicName\" label=\"Clinic Name\" errorMessages={messages}*/}\r\n            {/*                             form={{register, errors, registerObject}}/>*/}\r\n            {/*            <input type=\"submit\"/>*/}\r\n            {/*        </form>*/}\r\n            {/*    </>*/}\r\n            {/*}*/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ClinicForm;"]},"metadata":{},"sourceType":"module"}