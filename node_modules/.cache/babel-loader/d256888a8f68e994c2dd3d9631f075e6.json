{"ast":null,"code":"import api from '../../../Re-usable/Api Url/apiURL';\nimport { backToFrontPatient, frontToBackPatient } from \"../../../../Common Functions/PersonFunctions\";\nimport { patientURLS } from \"../../../../Constants/URLConstants\";\nexport const getPatient = async patientId => {\n  const result = await api.get(patientURLS.getPatient + `${patientId}`);\n  return result;\n};\nexport const postPatient = async (patient, setServerError, setAdded, e) => {\n  setServerError(\"\");\n  setAdded(false);\n  patient = frontToBackPatient(patient);\n\n  try {\n    const result = await api.post(patientURLS.postPatient, patient);\n\n    if (result.status === 201) {\n      setAdded(true);\n      setTimeout(function () {\n        setAdded(false);\n      }, 5000);\n    }\n\n    e.target.reset();\n  } catch (e) {\n    console.log(e.response.data); //TODO handle validation errors\n\n    setServerError(e.response.data);\n  }\n};\nexport const submitPatient = patient => {\n  postPatient(patient).then(value => console.log('patient submitted'));\n};\nexport const getPatientsList = async (setPatient, setTotalPages, pageNumber, itemsPerPage) => {\n  try {\n    const res = await api.get(`/patient/all?page=${pageNumber}&size=${itemsPerPage}`);\n    setTotalPages(res.data.totalPages);\n    setPatient(res.data.content);\n    return res.data.content;\n  } catch (e) {\n    console.log(e.response.data);\n  }\n};","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Patient/Patient Logic/PatientFunctions.js"],"names":["api","backToFrontPatient","frontToBackPatient","patientURLS","getPatient","patientId","result","get","postPatient","patient","setServerError","setAdded","e","post","status","setTimeout","target","reset","console","log","response","data","submitPatient","then","value","getPatientsList","setPatient","setTotalPages","pageNumber","itemsPerPage","res","totalPages","content"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,mCAAhB;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B,QAAqD,8CAArD;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,SAAP,IAAqB;AAC3C,QAAMC,MAAM,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQJ,WAAW,CAACC,UAAZ,GAA0B,GAAEC,SAAU,EAA9C,CAArB;AACA,SAAOC,MAAP;AACH,CAHM;AAMP,OAAO,MAAME,WAAW,GAAG,OAAOC,OAAP,EAAgBC,cAAhB,EAAgCC,QAAhC,EAA0CC,CAA1C,KAAgD;AAEvEF,EAAAA,cAAc,CAAC,EAAD,CAAd;AACAC,EAAAA,QAAQ,CAAC,KAAD,CAAR;AAEAF,EAAAA,OAAO,GAAGP,kBAAkB,CAACO,OAAD,CAA5B;;AACA,MAAI;AACA,UAAMH,MAAM,GAAG,MAAMN,GAAG,CAACa,IAAJ,CAASV,WAAW,CAACK,WAArB,EAAkCC,OAAlC,CAArB;;AAGA,QAAIH,MAAM,CAACQ,MAAP,KAAkB,GAAtB,EAA2B;AACvBH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,MAAAA,UAAU,CAAC,YAAY;AACnBJ,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;;AAEDC,IAAAA,CAAC,CAACI,MAAF,CAASC,KAAT;AACH,GAZD,CAYE,OAAOL,CAAP,EAAU;AACRM,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACQ,QAAF,CAAWC,IAAvB,EADQ,CAGR;;AACAX,IAAAA,cAAc,CAACE,CAAC,CAACQ,QAAF,CAAWC,IAAZ,CAAd;AACH;AAEJ,CAzBM;AA2BP,OAAO,MAAMC,aAAa,GAAIb,OAAD,IAAa;AAGtCD,EAAAA,WAAW,CAACC,OAAD,CAAX,CAAqBc,IAArB,CAA0BC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAnC;AACH,CAJM;AAOP,OAAO,MAAMM,eAAe,GAAG,OAAOC,UAAP,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,YAA9C,KAA+D;AACzF,MAAI;AACD,UAAMC,GAAG,GAAG,MAAM9B,GAAG,CAACO,GAAJ,CAAS,qBAAoBqB,UAAW,SAAQC,YAAa,EAA7D,CAAlB;AACAF,IAAAA,aAAa,CAACG,GAAG,CAACT,IAAJ,CAASU,UAAV,CAAb;AACAL,IAAAA,UAAU,CAACI,GAAG,CAACT,IAAJ,CAASW,OAAV,CAAV;AAEA,WAAOF,GAAG,CAACT,IAAJ,CAASW,OAAhB;AAEH,GAPA,CAOC,OAAOpB,CAAP,EAAU;AACRM,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACQ,QAAF,CAAWC,IAAvB;AACH;AAEJ,CAZM","sourcesContent":["import api from '../../../Re-usable/Api Url/apiURL'\r\nimport {backToFrontPatient, frontToBackPatient} from \"../../../../Common Functions/PersonFunctions\";\r\nimport {patientURLS} from \"../../../../Constants/URLConstants\";\r\n\r\nexport const getPatient = async (patientId) => {\r\n    const result = await api.get(patientURLS.getPatient + `${patientId}`);\r\n    return result;\r\n}\r\n\r\n\r\nexport const postPatient = async (patient, setServerError, setAdded, e) => {\r\n\r\n    setServerError(\"\");\r\n    setAdded(false)\r\n\r\n    patient = frontToBackPatient(patient);\r\n    try {\r\n        const result = await api.post(patientURLS.postPatient, patient);\r\n\r\n\r\n        if (result.status === 201) {\r\n            setAdded(true)\r\n            setTimeout(function () {\r\n                setAdded(false)\r\n            }, 5000);\r\n        }\r\n\r\n        e.target.reset();\r\n    } catch (e) {\r\n        console.log(e.response.data)\r\n\r\n        //TODO handle validation errors\r\n        setServerError(e.response.data);\r\n    }\r\n\r\n}\r\n\r\nexport const submitPatient = (patient) => {\r\n\r\n\r\n    postPatient(patient).then(value => console.log('patient submitted'));\r\n}\r\n\r\n\r\nexport const getPatientsList = async (setPatient, setTotalPages, pageNumber, itemsPerPage) => {\r\n     try {\r\n        const res = await api.get(`/patient/all?page=${pageNumber}&size=${itemsPerPage}`)\r\n        setTotalPages(res.data.totalPages)\r\n        setPatient(res.data.content)\r\n\r\n        return res.data.content\r\n\r\n    } catch (e) {\r\n        console.log(e.response.data)\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}