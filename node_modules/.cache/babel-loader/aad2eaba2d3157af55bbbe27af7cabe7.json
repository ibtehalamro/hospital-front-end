{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport React, { Suspense } from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport store from \"./Redux/Store\";\nimport { clinicsURLs as clinicsURL, dashboard, employeeURLS, invoicesURL, patientURLS, waitingQueueURLs } from \"./Constants/URLConstants\";\nimport { useSelector } from \"react-redux\";\nimport LandingPage from \"./Components/User Management/LandingPage\";\nimport RegisterPage from \"./Components/User Management/RegisterPage\";\nimport LoginPage from \"./Components/User Management/LoginPage\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER } from \"./Redux/Types/Types\";\nimport setJWTToken from \"./Components/User Management/Security/setJWTToken\";\nimport { logout } from \"./Redux/Actions/SecurityActions\";\nimport SecuredRoute from \"./Components/User Management/Security/SecureRoute\";\nimport ErrorComponent from \"./Components/Error Components/ErrorComponent\";\nimport Dashboard from \"./Components/Main Content/Dashboard/Dashboard\";\nconst patient = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"patient-component\" */\n'./Components/Main Content/Patient/PatientRouter'));\nconst employee = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"employee-component\" */\n'./Components/Main Content/Employee/EmployeeRouter'));\nconst waitingQueue = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"waitingQueue-component\" */\n'./Components/Main Content/Waiting Queue/WaitingQueueRouter'));\nconst clinics = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"clinics-component\" */\n'./Components/Main Content/Clinics Components/ClinicsRouter'));\nconst invoices = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"invoices-component\" */\n'./Components/Main Content/Invoices/InvoicesRouter'));\nconst jwtToken = localStorage.jwtToken;\nconsole.log(\"decoded_jwtToken 1\");\n\nif (jwtToken) {\n  console.log(\"decoded_jwtToken check\");\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now() / 1000;\n\n  if (decoded_jwtToken.exp < currentTime) {\n    console.log(\"decoded_jwtToken time expires\"); //handle logout\n\n    store.dispatch(logout());\n    window.location.href = \"/landing\";\n  }\n}\n\nfunction App() {\n  _s();\n\n  const security = useSelector(state => state.security);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"application\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/landing\",\n            component: LandingPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            component: RegisterPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LoginPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \" Loading .......\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 45\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(SecuredRoute, {\n                path: dashboard.dashboard,\n                security: security,\n                component: Dashboard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                path: patientURLS.patient,\n                security: security,\n                component: patient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                path: employeeURLS.employee,\n                security: security,\n                component: employee\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                path: waitingQueueURLs.waitingQueue,\n                security: security,\n                component: waitingQueue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                path: clinicsURL.clinic,\n                security: security,\n                component: clinics\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                path: invoicesURL.invoice,\n                security: security,\n                component: invoices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), \"default:\", /*#__PURE__*/_jsxDEV(Route, {\n                path: \"*\",\n                render: props => /*#__PURE__*/_jsxDEV(ErrorComponent, { ...props,\n                  message: \"Sorry we are unable to find your page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 69\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"R7rVgD4vKyEkXz3y+Y0M39hWsW8=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/App.js"],"names":["React","Suspense","Header","BrowserRouter","Redirect","Route","Switch","store","clinicsURLs","clinicsURL","dashboard","employeeURLS","invoicesURL","patientURLS","waitingQueueURLs","useSelector","LandingPage","RegisterPage","LoginPage","jwt_decode","SET_CURRENT_USER","setJWTToken","logout","SecuredRoute","ErrorComponent","Dashboard","patient","lazy","employee","waitingQueue","clinics","invoices","jwtToken","localStorage","console","log","decoded_jwtToken","dispatch","type","payload","currentTime","Date","now","exp","window","location","href","App","security","state","clinic","invoice","props"],"mappings":";;;;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAsC,cAAtC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,SACIC,WAAW,IAAIC,UADnB,EAEIC,SAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,WALJ,EAMIC,gBANJ,QAOO,0BAPP;AAQA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,OAAOC,WAAP,MAAwB,mDAAxB;AACA,SAAQC,MAAR,QAAqB,iCAArB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,SAAP,MAAsB,+CAAtB;AAEA,MAAMC,OAAO,gBAAG1B,KAAK,CAAC2B,IAAN,CAAW,MAAM;AAAO;AAA4C,iDAAnD,CAAjB,CAAhB;AACA,MAAMC,QAAQ,gBAAG5B,KAAK,CAAC2B,IAAN,CAAW,MAAM;AAAO;AAA8C,mDAArD,CAAjB,CAAjB;AACA,MAAME,YAAY,gBAAG7B,KAAK,CAAC2B,IAAN,CAAW,MAAM;AAAO;AAAkD,4DAAzD,CAAjB,CAArB;AACA,MAAMG,OAAO,gBAAG9B,KAAK,CAAC2B,IAAN,CAAW,MAAM;AAAQ;AAA4C,4DAApD,CAAjB,CAAhB;AACA,MAAMI,QAAQ,gBAAG/B,KAAK,CAAC2B,IAAN,CAAW,MAAM;AAAQ;AAA6C,mDAArD,CAAjB,CAAjB;AAEA,MAAMK,QAAQ,GAAGC,YAAY,CAACD,QAA9B;AACAE,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAGA,IAAIH,QAAJ,EAAc;AACVE,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEAd,EAAAA,WAAW,CAACW,QAAD,CAAX;AACA,QAAMI,gBAAgB,GAAGjB,UAAU,CAACa,QAAD,CAAnC;AACAzB,EAAAA,KAAK,CAAC8B,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAElB,gBADK;AAEXmB,IAAAA,OAAO,EAAEH;AAFE,GAAf;AAKA,QAAMI,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,MAAIN,gBAAgB,CAACO,GAAjB,GAAuBH,WAA3B,EAAwC;AACpCN,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EADoC,CAEpC;;AACA5B,IAAAA,KAAK,CAAC8B,QAAN,CAAef,MAAM,EAArB;AAEAsB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,UAAvB;AACH;AACJ;;AAKD,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAMC,QAAQ,GAAGjC,WAAW,CAACkC,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BAEI,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,+BACI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAE,UAAnB;AAA+B,YAAA,SAAS,EAAEhC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAE,WAAnB;AAAgC,YAAA,SAAS,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAE,QAAnB;AAA6B,YAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAKI,QAAC,QAAD;AAAU,YAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA,mCACI,QAAC,MAAD;AAAA,sCAEI,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAER,SAAS,CAACA,SAA9B;AAAyC,gBAAA,QAAQ,EAAEsC,QAAnD;AAA6D,gBAAA,SAAS,EAAEvB;AAAxE;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKI,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAEZ,WAAW,CAACa,OAAhC;AAAyC,gBAAA,QAAQ,EAAEsB,QAAnD;AAA6D,gBAAA,SAAS,EAAEtB;AAAxE;AAAA;AAAA;AAAA;AAAA,sBALJ,eAQI,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAEf,YAAY,CAACiB,QAAjC;AAA2C,gBAAA,QAAQ,EAAEoB,QAArD;AAA+D,gBAAA,SAAS,EAAEpB;AAA1E;AAAA;AAAA;AAAA;AAAA,sBARJ,eAWI,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAEd,gBAAgB,CAACe,YAArC;AAAmD,gBAAA,QAAQ,EAAEmB,QAA7D;AACc,gBAAA,SAAS,EAAEnB;AADzB;AAAA;AAAA;AAAA;AAAA,sBAXJ,eAeI,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAEpB,UAAU,CAACyC,MAA/B;AAAuC,gBAAA,QAAQ,EAAEF,QAAjD;AAA2D,gBAAA,SAAS,EAAElB;AAAtE;AAAA;AAAA;AAAA;AAAA,sBAfJ,eAkBI,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAElB,WAAW,CAACuC,OAAhC;AAAyC,gBAAA,QAAQ,EAAEH,QAAnD;AAA6D,gBAAA,SAAS,EAAEjB;AAAxE;AAAA;AAAA;AAAA;AAAA,sBAlBJ,2BAoBI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAE,GAAb;AAAkB,gBAAA,MAAM,EAAGqB,KAAK,iBAAI,QAAC,cAAD,OAAoBA,KAApB;AAA2B,kBAAA,OAAO,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,sBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AA8CH;;GAlDQL,G;UAEYhC,W;;;KAFZgC,G;AAoDT,eAAeA,GAAf","sourcesContent":["import './App.scss';\nimport React, {Suspense} from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport store from \"./Redux/Store\";\n\nimport {\n    clinicsURLs as clinicsURL,\n    dashboard,\n    employeeURLS,\n    invoicesURL,\n    patientURLS,\n    waitingQueueURLs\n} from \"./Constants/URLConstants\";\nimport {useSelector} from \"react-redux\";\nimport LandingPage from \"./Components/User Management/LandingPage\";\nimport RegisterPage from \"./Components/User Management/RegisterPage\";\nimport LoginPage from \"./Components/User Management/LoginPage\";\n\nimport jwt_decode from \"jwt-decode\";\nimport {SET_CURRENT_USER} from \"./Redux/Types/Types\";\nimport setJWTToken from \"./Components/User Management/Security/setJWTToken\";\nimport {logout} from \"./Redux/Actions/SecurityActions\";\nimport SecuredRoute from \"./Components/User Management/Security/SecureRoute\";\nimport ErrorComponent from \"./Components/Error Components/ErrorComponent\";\nimport Dashboard from \"./Components/Main Content/Dashboard/Dashboard\";\n\nconst patient = React.lazy(() => import(/* webpackChunkName: \"patient-component\" */ './Components/Main Content/Patient/PatientRouter'));\nconst employee = React.lazy(() => import(/* webpackChunkName: \"employee-component\" */  './Components/Main Content/Employee/EmployeeRouter'));\nconst waitingQueue = React.lazy(() => import(/* webpackChunkName: \"waitingQueue-component\" */  './Components/Main Content/Waiting Queue/WaitingQueueRouter'));\nconst clinics = React.lazy(() => import( /* webpackChunkName: \"clinics-component\" */ './Components/Main Content/Clinics Components/ClinicsRouter'));\nconst invoices = React.lazy(() => import( /* webpackChunkName: \"invoices-component\" */ './Components/Main Content/Invoices/InvoicesRouter'));\n\nconst jwtToken = localStorage.jwtToken;\nconsole.log(\"decoded_jwtToken 1\")\n\n\nif (jwtToken) {\n    console.log(\"decoded_jwtToken check\")\n\n    setJWTToken(jwtToken);\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n        console.log(\"decoded_jwtToken time expires\")\n        //handle logout\n        store.dispatch(logout())\n\n        window.location.href = \"/landing\";\n    }\n}\n\n\n\n\nfunction App() {\n\n    const security = useSelector(state => state.security);\n\n    return (\n\n        <div className=\"application\">\n\n            <BrowserRouter>\n                <Header/>\n                <main className=\"main-content\">\n                    <Switch>\n                        <Route exact path={\"/landing\"} component={LandingPage}/>\n                        <Route exact path={\"/register\"} component={RegisterPage}/>\n                        <Route exact path={\"/login\"} component={LoginPage}/>\n\n                        <Suspense fallback={<div> Loading .......</div>}>\n                            <Switch>\n                                {/*Dashboard routes*/}\n                                <SecuredRoute path={dashboard.dashboard} security={security} component={Dashboard}/>\n\n                                {/*patient routes*/}\n                                <SecuredRoute path={patientURLS.patient} security={security} component={patient}/>\n\n                                {/*employee routes*/}\n                                <SecuredRoute path={employeeURLS.employee} security={security} component={employee}/>\n\n                                {/*waiting queue routers*/}\n                                <SecuredRoute path={waitingQueueURLs.waitingQueue} security={security}\n                                              component={waitingQueue}/>\n\n                                {/*clinics routers*/}\n                                <SecuredRoute path={clinicsURL.clinic} security={security} component={clinics}/>\n\n                                {/*invoice routers*/}\n                                <SecuredRoute path={invoicesURL.invoice} security={security} component={invoices}/>\n                                default:\n                                <Route path={\"*\"} render={(props => <ErrorComponent {...props} message={\"Sorry we are unable to find your page\"} />)}/>\n                                {/*{security.validToken === true ? <Route path={\"*\"} render={(props => <ErrorComponent {...props} message={\"Sorry we are unable to find your page\"} />)} />:<Redirect to={\"/landing\"}/>}*/}\n\n                            </Switch>\n\n                        </Suspense>\n                    </Switch>\n                </main>\n\n            </BrowserRouter>\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}