{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Waiting Queue\\\\WaitingQueueList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { deletePatientFromWaitingQueue, getAllQueues } from \"./Waiting Queue Logic/WaitingQueueFunctions\";\n\nfunction WaitingQueueList(props) {\n  _s();\n\n  const QueueTableHead = [\"Queue Number\", \"ID\", \"Patient Full Name\", \"Charge Patient\", \"Remove from Queue\"];\n  const QueueTableBody = [\"id\", \"patientFullName\"];\n  const [waititngQueue, setWaititngQueue] = useState([]);\n\n  const fetchData = async () => {\n    setWaititngQueue(await getAllQueues());\n  };\n\n  useLayoutEffect(() => {\n    fetchData();\n  }, []);\n\n  function deletePatientFromQueueMethod(id, clinic) {\n    console.log(id); // dispatch(deletePatientFromQueueActionMethod(id, clinic))\n  }\n\n  function chargePatientMethod(id) {\n    const res = deletePatientFromWaitingQueue(id);\n\n    if (res == 500) {\n      console.log(\"res is 500\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: waititngQueue === undefined || Object.keys(waititngQueue).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add patients to the waiting Queue to view them\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this) : Object.keys(waititngQueue).map(key => {\n      if (waititngQueue[key].length !== 0) {\n        let value = waititngQueue[key];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container justify-content-center component \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center \",\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: QueueTableHead.map(head => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: head\n                }, head, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 65\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: value.map((body, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), QueueTableBody.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: body[item]\n                  }, item, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 56\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-danger\",\n                    onClick: () => deletePatientFromWaitingQueue(body.id, key),\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)]\n              }, body.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 32\n        }, this);\n      } else {\n        delete waititngQueue[key];\n      }\n    })\n  }, void 0, false);\n}\n\n_s(WaitingQueueList, \"4cCYfj64Yk0kFxcWNSolXxWZP0c=\");\n\n_c = WaitingQueueList;\nexport default WaitingQueueList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitingQueueList\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Waiting Queue/WaitingQueueList.js"],"names":["React","useLayoutEffect","useState","deletePatientFromWaitingQueue","getAllQueues","WaitingQueueList","props","QueueTableHead","QueueTableBody","waititngQueue","setWaititngQueue","fetchData","deletePatientFromQueueMethod","id","clinic","console","log","chargePatientMethod","res","undefined","Object","keys","length","map","key","value","head","body","index","item"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\n\r\n\r\nimport {deletePatientFromWaitingQueue, getAllQueues} from \"./Waiting Queue Logic/WaitingQueueFunctions\";\r\n\r\nfunction WaitingQueueList(props) {\r\n      const QueueTableHead = [\r\n        \"Queue Number\",\r\n        \"ID\",\r\n        \"Patient Full Name\",\r\n\r\n        \"Charge Patient\",\r\n        \"Remove from Queue\",\r\n\r\n    ]\r\n\r\n      const QueueTableBody = [\r\n\r\n        \"id\",\r\n        \"patientFullName\",\r\n\r\n\r\n    ]\r\n    const [waititngQueue, setWaititngQueue] = useState([])\r\n\r\n    const fetchData = async () => {\r\n\r\n        setWaititngQueue(await getAllQueues())\r\n\r\n    \r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    function deletePatientFromQueueMethod(id, clinic) {\r\n        console.log(id);\r\n        // dispatch(deletePatientFromQueueActionMethod(id, clinic))\r\n    }\r\n\r\n    function chargePatientMethod(id) {\r\n     const res=   deletePatientFromWaitingQueue(id)\r\n        if(res==500){\r\n            console.log(\"res is 500\")\r\n        }\r\n    }\r\n\r\n    return <>\r\n\r\n        {(waititngQueue === undefined || Object.keys(waititngQueue).length === 0) ?\r\n            <div className=\"component text-center\">\r\n                <h4>Add patients to the waiting Queue to view them</h4>\r\n            </div>\r\n            :\r\n            Object.keys(waititngQueue).map((key) => {\r\n                    if (waititngQueue[key].length !== 0) {\r\n\r\n                        let value = waititngQueue[key];\r\n                        return <div key={key} className=\"container justify-content-center component \">\r\n                            <h1 className=\"text-center \">{key}</h1>\r\n\r\n                            <hr/>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    {QueueTableHead.map(head => <th key={head}>{head}</th>)}\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {value.map((body, index) =>\r\n                                    <tr key={body.id}>\r\n                                        <td>{index + 1}</td>\r\n                                        {QueueTableBody.map((item) => {\r\n                                                return <td key={item}>\r\n                                                    {body[item]}\r\n                                                </td>\r\n                                            }\r\n                                        )}\r\n                                        <td>\r\n                                            {/*<Link className=\"text-success font-weight-bold\" to={{*/}\r\n                                            {/*    pathname: routeURLs.invoice + `/${body[\"patient\"].id}`,*/}\r\n                                            {/*    state: {*/}\r\n                                            {/*        patient: body[\"patientFullName\"]*/}\r\n                                            {/*    }*/}\r\n                                            {/*}}>Charge Patient</Link>*/}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className=\"btn-danger\"\r\n                                                    onClick={() => deletePatientFromWaitingQueue(body.id, key)}>delete\r\n                                            </button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                )\r\n                                }\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    } else {\r\n                        delete waititngQueue[key]\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    </>;\r\n}\r\n\r\nexport default WaitingQueueList;"]},"metadata":{},"sourceType":"module"}