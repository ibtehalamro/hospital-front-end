{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Re-usable\\\\Form Components\\\\TextInputCustom.js\";\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport \"../../../../../../hospital project v1/hospital React Project/src/Components/PatientComponents/PatientStyle.css\";\n\nconst TextInputCustom = ({\n  field,\n  form: {\n    register,\n    errors,\n    registerObject\n  },\n  label,\n  errorMessages,\n  onChange\n}, placeHolder) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: field,\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: ClassNames('form-control', {\n        \"is-invalid\": errors[field]\n      }),\n      name: field,\n      ref: register(registerObject),\n      onChange: onChange,\n      placeholder: typeof placeHolder === \"object\" ? '' : placeHolder\n    }, field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), errors[field] && errors[field].type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \" p-2 invalid-feedback fa fa-exclamation-triangle\",\n      children: errorMessages && label + errorMessages[errors[field].type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TextInputCustom;\nexport default TextInputCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInputCustom\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Re-usable/Form Components/TextInputCustom.js"],"names":["React","ClassNames","TextInputCustom","field","form","register","errors","registerObject","label","errorMessages","onChange","placeHolder","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,gHAAP;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,IAAI,EAAC;AAACC,IAAAA,QAAD;AAAUC,IAAAA,MAAV;AAAiBC,IAAAA;AAAjB,GAAZ;AAA6CC,EAAAA,KAA7C;AAAmDC,EAAAA,aAAnD;AAAiEC,EAAAA;AAAjE,CAAD,EAA4EC,WAA5E,KAA4F;AAEhH,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAER,KAAhB;AAAA,iBACKK,KADL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,SAAS,EAAEP,UAAU,CAAC,cAAD,EAAiB;AAAC,sBAAcK,MAAM,CAACH,KAAD;AAArB,OAAjB,CAA5B;AAEO,MAAA,IAAI,EAAEA,KAFb;AAGO,MAAA,GAAG,EAAEE,QAAQ,CAACE,cAAD,CAHpB;AAIO,MAAA,QAAQ,EAAEG,QAJjB;AAKO,MAAA,WAAW,EAAE,OAAOC,WAAP,KAAqB,QAArB,GAA8B,EAA9B,GAAiCA;AALrD,OACYR,KADZ;AAAA;AAAA;AAAA;AAAA,YAJJ,EAaKG,MAAM,CAACH,KAAD,CAAN,IAAiBG,MAAM,CAACH,KAAD,CAAN,CAAcS,IAAd,KAAuB,UAAxC,iBACD;AAAG,MAAA,SAAS,EAAC,kDAAb;AAAA,gBACKH,aAAa,IACdD,KAAK,GAAGC,aAAa,CAACH,MAAM,CAACH,KAAD,CAAN,CAAcS,IAAf;AAFzB;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAxBD;;KAAMV,e;AA0BN,eAAeA,eAAf","sourcesContent":["import React from 'react';\r\nimport ClassNames from 'classnames';\r\nimport \"../../../../../../hospital project v1/hospital React Project/src/Components/PatientComponents/PatientStyle.css\"\r\n\r\nconst TextInputCustom = ({field,form:{register,errors,registerObject},label,errorMessages,onChange},placeHolder) => {\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={field}>\r\n                {label}:\r\n            </label>\r\n            <input className={ClassNames('form-control', {\"is-invalid\": errors[field]})}\r\n                   key={field}\r\n                   name={field}\r\n                   ref={register(registerObject)}\r\n                   onChange={onChange}\r\n                   placeholder={typeof placeHolder===\"object\"?'':placeHolder}\r\n\r\n\r\n            />\r\n            {errors[field] && errors[field].type === \"required\" &&\r\n            <p className=\" p-2 invalid-feedback fa fa-exclamation-triangle\">\r\n                {errorMessages &&\r\n                label + errorMessages[errors[field].type]}\r\n            </p>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextInputCustom;"]},"metadata":{},"sourceType":"module"}