{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Patient\\\\Patient Information\\\\PatientInformationWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PatientInvoices from \"./PatientInvoices\";\nimport PatientBio from \"./PatientBio\";\nimport PatientForm from \"../Patient Forms/PatientForm\";\nimport { getPatientInformationService } from \"../Patient Logic/PatientServices\";\n\nconst PatientInformationWrapper = props => {\n  _s();\n\n  const id = props.match.params.id;\n  const [patient, setPatient] = useState();\n  const [invoices, setInvoices] = useState();\n  const [patientInfo, setPatientInfo] = useState(true);\n  useEffect(() => {\n    console.log('PatientRouter Information **************************');\n  });\n\n  const getPatientInformation = async () => {\n    const res = await getPatientInformationService(id);\n    console.log(\"paaaaa\", res); // let {patient,invoices}=res;\n\n    setPatient(res.patient);\n    setInvoices(res.invoices);\n  };\n\n  useEffect(() => {\n    getPatientInformation();\n  }, []); // fetch your data when the props.location changes\n  // useEffect(() => {\n  //\n  //    }, [props.location])  // fetch your data when the props.location changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: patientInfo === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-information-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-information-data-wrapper\",\n        children: invoices === undefined ? \"No available invoces\" : /*#__PURE__*/_jsxDEV(PatientInvoices, {\n          invoices: invoices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), patient === undefined ? \"no patient\" : /*#__PURE__*/_jsxDEV(PatientBio, {\n        setPatientInfo: setPatientInfo,\n        patient: patient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(PatientForm, {\n      patient: patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this)\n  }, void 0, false);\n};\n\n_s(PatientInformationWrapper, \"uAKU/8bEbpzKrA/v0uiVNLnDse4=\");\n\n_c = PatientInformationWrapper;\nexport default PatientInformationWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientInformationWrapper\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Patient/Patient Information/PatientInformationWrapper.js"],"names":["React","useEffect","useState","PatientInvoices","PatientBio","PatientForm","getPatientInformationService","PatientInformationWrapper","props","id","match","params","patient","setPatient","invoices","setInvoices","patientInfo","setPatientInfo","console","log","getPatientInformation","res","undefined"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,4BAAR,QAA2C,kCAA3C;;AAEA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AACH,GAFQ,CAAT;;AAIA,QAAMC,qBAAqB,GAAG,YAAW;AACrC,UAAMC,GAAG,GAAG,MAAMf,4BAA4B,CAACG,EAAD,CAA9C;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBE,GAArB,EAFqC,CAGrC;;AACAR,IAAAA,UAAU,CAACQ,GAAG,CAACT,OAAL,CAAV;AACAG,IAAAA,WAAW,CAACM,GAAG,CAACP,QAAL,CAAX;AACH,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,qBAAqB;AAExB,GAHQ,EAGN,EAHM,CAAT,CAlByC,CAqBjC;AAEX;AACA;AACA;;AAGG,sBAAQ;AAAA,cACCJ,WAAW,KAAK,IAAhB,gBAAuB;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACpB;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,kBAGQF,QAAQ,KAAKQ,SAAb,GAAyB,sBAAzB,gBAAkD,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAER;AAA3B;AAAA;AAAA;AAAA;AAAA;AAH1D;AAAA;AAAA;AAAA;AAAA,cADoB,EAQnBF,OAAO,KAAKU,SAAZ,GAAwB,YAAxB,gBAAuC,QAAC,UAAD;AAAY,QAAA,cAAc,EAAEL,cAA5B;AAA4C,QAAA,OAAO,EAAEL;AAArD;AAAA;AAAA;AAAA;AAAA,cARpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,gBAUQ,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AAXT,mBAAR;AAgBH,CA5CD;;GAAML,yB;;KAAAA,yB;AA8CN,eAAeA,yBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport PatientInvoices from \"./PatientInvoices\";\r\nimport PatientBio from \"./PatientBio\";\r\nimport PatientForm from \"../Patient Forms/PatientForm\";\r\nimport {getPatientInformationService} from \"../Patient Logic/PatientServices\";\r\n\r\nconst PatientInformationWrapper = (props) => {\r\n    const id = props.match.params.id;\r\n    const [patient, setPatient] = useState();\r\n    const [invoices, setInvoices] = useState();\r\n    const [patientInfo, setPatientInfo] = useState(true);\r\n\r\n    useEffect(() => {\r\n        console.log('PatientRouter Information **************************')\r\n    })\r\n\r\n    const getPatientInformation = async() => {\r\n        const res = await getPatientInformationService(id);\r\n        console.log(\"paaaaa\",res)\r\n        // let {patient,invoices}=res;\r\n        setPatient(res.patient)\r\n        setInvoices(res.invoices)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPatientInformation()\r\n\r\n    }, [])  // fetch your data when the props.location changes\r\n\r\n // useEffect(() => {\r\n //\r\n //    }, [props.location])  // fetch your data when the props.location changes\r\n\r\n\r\n    return (<>\r\n            {patientInfo === true ? <div className=\"person-information-wrapper\">\r\n                <div className=\"person-information-data-wrapper\">\r\n\r\n                    {\r\n                        invoices === undefined ? \"No available invoces\" : <PatientInvoices invoices={invoices}/>\r\n\r\n                    }\r\n                </div>\r\n                {patient === undefined ? \"no patient\" : <PatientBio setPatientInfo={setPatientInfo} patient={patient}/>}\r\n\r\n            </div> : <PatientForm patient={patient}/>}\r\n            {/*<Route   path={patientURLS.patient} component={PatientRouter}/>*/}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatientInformationWrapper;"]},"metadata":{},"sourceType":"module"}