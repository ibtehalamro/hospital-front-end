{"ast":null,"code":"import api from '../../../Re-usable/Api Url/apiURL';\nimport { webApiURL } from \"../../../../Constants/URLConstants\";\nexport const postPatientToQueue = async (queue, history) => {\n  try {\n    await api.post(webApiURL.waitingQueue.postPatientToWaitingQueue, queue); // history.push(routeURLs.waitingQueue)\n  } catch (e) {}\n};\nexport const getAllQueues = () => async dispatch => {\n  try {\n    const res = await apiURL.get(\"/queue/all\");\n    dispatch({\n      type: queue.GET_ALL_QUEUES,\n      payload: res.data\n    });\n  } catch (e) {}\n};","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Waiting Queue/Waiting Queue Logic/WaitingQueueFunctions.js"],"names":["api","webApiURL","postPatientToQueue","queue","history","post","waitingQueue","postPatientToWaitingQueue","e","getAllQueues","dispatch","res","apiURL","get","type","GET_ALL_QUEUES","payload","data"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,mCAAhB;AACA,SAAQC,SAAR,QAAwB,oCAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAE,OAAOC,KAAP,EAAcC,OAAd,KAA2B;AAExD,MAAI;AACA,UAAMJ,GAAG,CAACK,IAAJ,CAASJ,SAAS,CAACK,YAAV,CAAuBC,yBAAhC,EAA2DJ,KAA3D,CAAN,CADA,CAEA;AACH,GAHD,CAGE,OAAOK,CAAP,EAAU,CAEX;AACJ,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAEhD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,MAAM,CAACC,GAAP,CAAW,YAAX,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,KAAK,CAACY,cADP;AAELC,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,KAAD,CAAR;AAKH,GAPD,CAOE,OAAOT,CAAP,EAAU,CAEX;AACJ,CAZM","sourcesContent":["import api from '../../../Re-usable/Api Url/apiURL'\r\nimport {webApiURL} from \"../../../../Constants/URLConstants\";\r\n\r\nexport const postPatientToQueue =async (queue, history) =>  {\r\n\r\n    try {\r\n        await api.post(webApiURL.waitingQueue.postPatientToWaitingQueue, queue)\r\n        // history.push(routeURLs.waitingQueue)\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const getAllQueues = () => async dispatch => {\r\n\r\n    try {\r\n        const res = await apiURL.get(\"/queue/all\")\r\n        dispatch({\r\n            type: queue.GET_ALL_QUEUES,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}