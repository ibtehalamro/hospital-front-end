{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Waiting Queue\\\\WaitingQueueMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { getAllClinicsService } from \"../Clinics Components/Clinics Functions/ClinicsServices\";\nimport WaitingQueueForm from \"./WaitingQueueForm\";\nimport { getEmployeesListService } from \"../Employee/Employee Logic/EmployeeServices\";\nimport { getAllQueuesService } from \"./Waiting Queue Logic/WaitingQueueServices\";\n\nconst WaitingQueueMain = props => {\n  _s();\n\n  const [clinics, setClinics] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(1);\n  const [waititngQueue, setWaititngQueue] = useState([]);\n\n  const fetchData = async () => {\n    setLoading(false);\n    setClinics(await getAllClinicsService());\n    const res = await getEmployeesListService();\n    setEmployees(res.content);\n    setTotalPages(res.totalPages);\n    setWaititngQueue(await getAllQueuesService());\n    setLoading(true);\n    console.log(\"clinic\", clinics);\n  };\n\n  useLayoutEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"waiting-queue-wrapper\",\n    children: loading && /*#__PURE__*/_jsxDEV(WaitingQueueForm, {\n      employees: employees,\n      clinics: clinics,\n      patient: props.location.state.patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WaitingQueueMain, \"OEJJfMDCSai1Vjdw83ToTB4PbYU=\");\n\n_c = WaitingQueueMain;\nexport default WaitingQueueMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitingQueueMain\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Waiting Queue/WaitingQueueMain.js"],"names":["React","useLayoutEffect","useState","getAllClinicsService","WaitingQueueForm","getEmployeesListService","getAllQueuesService","WaitingQueueMain","props","clinics","setClinics","employees","setEmployees","loading","setLoading","totalPages","setTotalPages","waititngQueue","setWaititngQueue","fetchData","res","content","console","log","location","state","patient"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,oBAAR,QAAmC,yDAAnC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,uBAAR,QAAsC,6CAAtC;AACA,SAAQC,mBAAR,QAAkC,4CAAlC;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAEhC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMiB,SAAS,GAAG,YAAY;AAC1BL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,IAAAA,UAAU,CAAC,MAAMP,oBAAoB,EAA3B,CAAV;AACA,UAAMiB,GAAG,GAAG,MAAMf,uBAAuB,EAAzC;AACAO,IAAAA,YAAY,CAACQ,GAAG,CAACC,OAAL,CAAZ;AACAL,IAAAA,aAAa,CAACI,GAAG,CAACL,UAAL,CAAb;AACAG,IAAAA,gBAAgB,CAAC,MAAMZ,mBAAmB,EAA1B,CAAhB;AACAQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,OAAtB;AACH,GATD;;AAWAR,EAAAA,eAAe,CAAC,MAAM;AAClBkB,IAAAA,SAAS;AACZ,GAFc,EAEZ,EAFY,CAAf;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,cACKN,OAAO,iBACR,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEF,SAA7B;AAAwC,MAAA,OAAO,EAAEF,OAAjD;AAA0D,MAAA,OAAO,EAAED,KAAK,CAACgB,QAAN,CAAeC,KAAf,CAAqBC;AAAxF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/BD;;GAAMnB,gB;;KAAAA,gB;AAiCN,eAAeA,gBAAf","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\nimport {getAllClinicsService} from \"../Clinics Components/Clinics Functions/ClinicsServices\";\r\nimport WaitingQueueForm from \"./WaitingQueueForm\";\r\nimport {getEmployeesListService} from \"../Employee/Employee Logic/EmployeeServices\";\r\nimport {getAllQueuesService} from \"./Waiting Queue Logic/WaitingQueueServices\";\r\n\r\nconst WaitingQueueMain = (props) => {\r\n\r\n    const [clinics, setClinics] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [waititngQueue, setWaititngQueue] = useState([])\r\n\r\n    const fetchData = async () => {\r\n        setLoading(false)\r\n        setClinics(await getAllClinicsService());\r\n        const res = await getEmployeesListService();\r\n        setEmployees(res.content);\r\n        setTotalPages(res.totalPages);\r\n        setWaititngQueue(await getAllQueuesService())\r\n        setLoading(true)\r\n        console.log(\"clinic\", clinics)\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"waiting-queue-wrapper\">\r\n            {loading &&\r\n            <WaitingQueueForm employees={employees} clinics={clinics} patient={props.location.state.patient}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WaitingQueueMain;"]},"metadata":{},"sourceType":"module"}