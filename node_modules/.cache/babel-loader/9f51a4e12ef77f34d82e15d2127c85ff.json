{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Clinics Components\\\\ClinicForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport TextInputCustom from \"../../Re-usable/FormComponents/TextInputCustom\";\nimport { messages, registerObject } from \"../../../Common Functions/FormObjects\";\nimport { getAllClinics, postClinic } from \"./Clinics Functions/ClinicsFunctions\";\n\nfunction ClinicForm(props) {\n  _s();\n\n  const history = useHistory();\n  const {\n    handleSubmit,\n    errors,\n    reset,\n    register\n  } = useForm();\n  const [clinic, setClinic] = useState();\n  const [loading, setLoading] = useState(false);\n  const clinicId = props.match !== undefined ? props.match.params.id : null;\n  useLayoutEffect(() => {\n    if (clinicId === null) setLoading(true);else getAllClinics();\n  }, []);\n\n  function onSubmit(data, e) {\n    if (props.match !== undefined) data = { ...data,\n      id: props.match.params.id\n    };\n    postClinic(data).then(() => {\n      e.target.reset();\n      getAllClinics();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" clinic-form-container\",\n    children: [loading === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading user info . . . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 35\n    }, this), clinicId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"edit clinic \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"previous name : \", clinic.clinicName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mainTitle\",\n        children: \"Add Clinic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-bold\",\n        children: \"Choose a unique clinic name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"w-75\",\n        children: [/*#__PURE__*/_jsxDEV(TextInputCustom, {\n          field: \"clinicName\",\n          label: \"Clinic Name\",\n          errorMessages: messages,\n          form: {\n            register,\n            errors,\n            registerObject\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClinicForm, \"Z+Y4sXu1vX8Czz6eMAJD5GBSvng=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = ClinicForm;\nexport default ClinicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClinicForm\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Clinics Components/ClinicForm.js"],"names":["React","useLayoutEffect","useState","useForm","useHistory","TextInputCustom","messages","registerObject","getAllClinics","postClinic","ClinicForm","props","history","handleSubmit","errors","reset","register","clinic","setClinic","loading","setLoading","clinicId","match","undefined","params","id","onSubmit","data","e","then","target","clinicName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACE,SAAQC,UAAR,QAAyB,cAAzB;AACF,OAAOC,eAAP,MAA4B,gDAA5B;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,uCAAvC;AACA,SAAQC,aAAR,EAAuBC,UAAvB,QAAwC,sCAAxC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM;AAACS,IAAAA,YAAD;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,MAA0Cb,OAAO,EAAvD;AAIA,QAAM,CAACc,MAAD,EAAQC,SAAR,IAAmBhB,QAAQ,EAAjC;AAGA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMmB,QAAQ,GAAGV,KAAK,CAACW,KAAN,KAAgBC,SAAhB,GAA4BZ,KAAK,CAACW,KAAN,CAAYE,MAAZ,CAAmBC,EAA/C,GAAoD,IAArE;AAEAxB,EAAAA,eAAe,CAAC,MAAM;AAElB,QAAIoB,QAAQ,KAAK,IAAjB,EACID,UAAU,CAAC,IAAD,CAAV,CADJ,KAGIZ,aAAa;AAEpB,GAPc,EAOZ,EAPY,CAAf;;AAUA,WAASkB,QAAT,CAAkBC,IAAlB,EAAwBC,CAAxB,EAA2B;AACvB,QAAIjB,KAAK,CAACW,KAAN,KAAgBC,SAApB,EACII,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAAUF,MAAAA,EAAE,EAAEd,KAAK,CAACW,KAAN,CAAYE,MAAZ,CAAmBC;AAAjC,KAAP;AAEJhB,IAAAA,UAAU,CAACkB,IAAD,CAAV,CAAiBE,IAAjB,CAAsB,MAAI;AACtBD,MAAAA,CAAC,CAACE,MAAF,CAASf,KAAT;AACAP,MAAAA,aAAa;AAChB,KAHD;AAMH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,eACKW,OAAO,KAAK,KAAZ,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD1B,EAEKE,QAAQ,iBACT;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,uCAAqBJ,MAAM,CAACc,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EASQZ,OAAO,iBACP;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,QAAQ,EAAEN,YAAY,CAACa,QAAD,CAA5B;AAAwC,QAAA,SAAS,EAAC,MAAlD;AAAA,gCACI,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,YAAvB;AAAoC,UAAA,KAAK,EAAC,aAA1C;AAAwD,UAAA,aAAa,EAAEpB,QAAvE;AACiB,UAAA,IAAI,EAAE;AAACU,YAAAA,QAAD;AAAWF,YAAAA,MAAX;AAAmBP,YAAAA;AAAnB;AADvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA1DQG,U;UACWN,U,EACgCD,O;;;KAF3CO,U;AA4DT,eAAeA,UAAf","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n  import {useHistory} from \"react-router\";\r\nimport TextInputCustom from \"../../Re-usable/FormComponents/TextInputCustom\";\r\nimport {messages, registerObject} from \"../../../Common Functions/FormObjects\";\r\nimport {getAllClinics, postClinic} from \"./Clinics Functions/ClinicsFunctions\";\r\n\r\nfunction ClinicForm(props) {\r\n    const history = useHistory();\r\n    const {handleSubmit, errors, reset, register} = useForm();\r\n\r\n\r\n\r\n    const [clinic,setClinic]=useState();\r\n\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const clinicId = props.match !== undefined ? props.match.params.id : null\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        if (clinicId === null)\r\n            setLoading(true)\r\n        else\r\n            getAllClinics()\r\n\r\n    }, [])\r\n\r\n\r\n    function onSubmit(data, e) {\r\n        if (props.match !== undefined)\r\n            data = {...data, id: props.match.params.id}\r\n\r\n        postClinic(data).then(()=>{\r\n            e.target.reset();\r\n            getAllClinics();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\" clinic-form-container\">\r\n            {loading === false && <div>Loading user info . . . .</div>}\r\n            {clinicId &&\r\n            <div>\r\n                <h4>edit clinic </h4>\r\n                <h5>previous name : {clinic.clinicName}</h5>\r\n            </div>\r\n            }\r\n            {\r\n                loading &&\r\n                <>\r\n                    <h1 className=\"mainTitle\">Add Clinic</h1>\r\n                    <p className=\"font-weight-bold\">Choose a unique clinic name</p>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"w-75\">\r\n                        <TextInputCustom field=\"clinicName\" label=\"Clinic Name\" errorMessages={messages}\r\n                                         form={{register, errors, registerObject}}/>\r\n                        <input type=\"submit\"/>\r\n                    </form>\r\n                </>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ClinicForm;"]},"metadata":{},"sourceType":"module"}