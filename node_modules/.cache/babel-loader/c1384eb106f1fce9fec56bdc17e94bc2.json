{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Patient\\\\PatientListTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { PatientsListTableHead } from \"../Constants/PatientConstants\";\nimport { useDispatch } from \"react-redux\";\nimport { modifyPatient } from \"../../Actions/PatientActions\";\nimport { useHistory } from \"react-router\";\nimport { routeURLs } from \"../Constants/URLConstants\";\nimport TableWithModify from \"../Common Components/TableWithModify\";\nimport apiURL from \"../../Store/apiURL\";\nimport Pagination from \"../Common Components/Pagination\";\nimport { getFullName } from \"../../Common Functions/PersonFunctions\";\n\nfunction PatientListTable(props) {\n  _s();\n\n  const [patients, setPatients] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    fetchPatients(pageNumber);\n  };\n\n  const fetchPatients = async pageNumber => {\n    const res = await apiURL.get(\"/patient/all?page=\" + pageNumber + \"&size=\" + itemsPerPage);\n    setTotalPages(res.data.totalPages);\n    setPatients(res.data.content);\n  };\n\n  useEffect(() => {\n    fetchPatients(currentPage);\n  }, []);\n\n  function modifyPatientMethod(id) {\n    dispatch(modifyPatient(id, history));\n    console.log(id + \" from modify function \");\n  }\n\n  function rowClick(id) {\n    history.push(routeURLs.patientInfo + \"/\" + id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientsTable\",\n    children: [/*#__PURE__*/_jsxDEV(TableWithModify, {\n      title: \"Patients available on the system\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: PatientsListTableHead.map(value => /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 57\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"colgroup\", {\n        children: [/*#__PURE__*/_jsxDEV(\"col\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n          className: \"colname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: patients === undefined && patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"8\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: \"No patients were found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this) : patients.map(patient => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"patientID\",\n              onClick: () => rowClick(patient.id),\n              children: patient.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"blue\",\n              children: getFullName(patient.person.personName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.person.dateOfBirth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.person.mobileNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => modifyPatientMethod(patient.id),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 83\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, patient.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), \"             \", /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      current: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PatientListTable, \"qn4JL9MJBF0J7fA+3xIY8C0kYZ0=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = PatientListTable;\nexport default PatientListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientListTable\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Patient/PatientListTable.js"],"names":["React","useEffect","useState","PatientsListTableHead","useDispatch","modifyPatient","useHistory","routeURLs","TableWithModify","apiURL","Pagination","getFullName","PatientListTable","props","patients","setPatients","dispatch","history","currentPage","setCurrentPage","totalPages","setTotalPages","itemsPerPage","setItemsPerPage","paginate","pageNumber","fetchPatients","res","get","data","content","modifyPatientMethod","id","console","log","rowClick","push","patientInfo","map","value","undefined","length","patient","person","personName","dateOfBirth","mobileNumber"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {PatientsListTableHead} from \"../Constants/PatientConstants\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {modifyPatient} from \"../../Actions/PatientActions\";\r\nimport {useHistory} from \"react-router\";\r\nimport {routeURLs} from \"../Constants/URLConstants\";\r\nimport TableWithModify from \"../Common Components/TableWithModify\";\r\nimport apiURL from \"../../Store/apiURL\";\r\nimport Pagination from \"../Common Components/Pagination\";\r\nimport {getFullName} from \"../../Common Functions/PersonFunctions\";\r\n\r\nfunction PatientListTable(props) {\r\n    const [patients, setPatients] = useState([])\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [itemsPerPage, setItemsPerPage] = useState(10)\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n        fetchPatients(pageNumber)\r\n    }\r\n    const fetchPatients = async (pageNumber) => {\r\n        const res = await apiURL.get(\"/patient/all?page=\" + pageNumber + \"&size=\" + itemsPerPage)\r\n        setTotalPages(res.data.totalPages)\r\n        setPatients(res.data.content)\r\n    }\r\n    useEffect(() => {\r\n        fetchPatients(currentPage)\r\n    }, [])\r\n\r\n    function modifyPatientMethod(id) {\r\n        dispatch(modifyPatient(id, history))\r\n        console.log(id + \" from modify function \")\r\n    }\r\n\r\n    function rowClick(id) {\r\n        history.push(routeURLs.patientInfo + \"/\" + id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"patientsTable\">\r\n\r\n            <TableWithModify  title={\"Patients available on the system\"}>\r\n                <thead>\r\n                <tr>\r\n                    {PatientsListTableHead.map(value => <th key={value} scope=\"col\">{value}</th>)}\r\n                </tr>\r\n                </thead>\r\n                <colgroup>\r\n                    <col className={\"col\"}/>\r\n                    <col className={\"colname\"}/>\r\n                    <col className={\"col\"}/>\r\n                    <col className={\"col\"}/>\r\n                    <col className={\"col\"}/>\r\n                </colgroup>\r\n                <tbody>\r\n                {patients === undefined && patients.length === 0 ?\r\n                    <tr>\r\n                        <td colSpan=\"8\"><p className=\"text-muted\">No patients were found</p></td>\r\n                    </tr>\r\n                    :\r\n                    patients.map(patient => {\r\n                        return <tr key={patient.id}>\r\n                            <td className=\"patientID\" onClick={() => rowClick(patient.id)}>{patient.id}</td>\r\n                            <td className=\"blue\">{getFullName(patient.person.personName)}</td>\r\n                            <td>{patient.person.dateOfBirth}</td>\r\n                            <td>{patient.person.mobileNumber}</td>\r\n                            <td><span>\r\n                          <button onClick={() => modifyPatientMethod(patient.id)}><i className=\"fas fa-edit\"></i></button>\r\n\r\n                      </span></td>\r\n                        </tr>\r\n                    })}\r\n\r\n                </tbody>\r\n            </TableWithModify>             <Pagination totalPages={totalPages} current={currentPage} paginate={paginate}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientListTable;\r\n"]},"metadata":{},"sourceType":"module"}