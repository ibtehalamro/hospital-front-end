{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Clinics Components\\\\Clinic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport ClinicForm from \"./ClinicForm\";\nimport ClinicsTable from \"./ClinicsTable\";\nimport { getAllClinics } from \"./Clinics Functions/ClinicsFunctions\";\n\nconst Clinic = props => {\n  _s();\n\n  const clinicId = props.match !== undefined ? props.match.params.id : null;\n  const [upadate, setUpdate] = useState(true);\n  const [clinics, setClinics] = useState([]);\n  useEffect(() => {\n    console.log(\"--clinic update\");\n  });\n\n  function refresh() {\n    setUpdate(!upadate);\n  }\n\n  const fetchData = async () => {\n    console.log(\"--clinic table,,,,, effect\");\n    setClinics(await getAllClinics());\n    console.log('clinic data from the clinic', clinics);\n  };\n\n  const [loading, setLoading] = useState(true);\n  useLayoutEffect(() => {\n    fetchData();\n  }, [upadate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clinics-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ClinicForm, {\n      setUpdate: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ClinicsTable, {\n      clinics: clinics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Clinic, \"DlkkzM6ZcNoY2C1S5/d2AtPJ7w0=\");\n\n_c = Clinic;\nexport default Clinic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clinic\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Clinics Components/Clinic.js"],"names":["React","useEffect","useLayoutEffect","useState","ClinicForm","ClinicsTable","getAllClinics","Clinic","props","clinicId","match","undefined","params","id","upadate","setUpdate","clinics","setClinics","console","log","refresh","fetchData","loading","setLoading"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,eAA1B,EAA2CC,QAA3C,QAA0D,OAA1D;AACC,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACD,SAAQC,aAAR,QAA4B,sCAA5B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAGtB,QAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAN,KAAgBC,SAAhB,GAA4BH,KAAK,CAACE,KAAN,CAAYE,MAAZ,CAAmBC,EAA/C,GAAoD,IAArE;AACA,QAAM,CAACC,OAAD,EAASC,SAAT,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAGAF,EAAAA,SAAS,CAAC,MAAI;AACViB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GAFQ,CAAT;;AAIA,WAASC,OAAT,GAAmB;AACfL,IAAAA,SAAS,CAAC,CAACD,OAAF,CAAT;AACH;;AAED,QAAMO,SAAS,GAAC,YAAY;AAEvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACLF,IAAAA,UAAU,CAAC,MAAMX,aAAa,EAApB,CAAV;AACIY,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0CH,OAA1C;AAEH,GAND;;AAOA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,eAAe,CAAC,MAAM;AAGlBmB,IAAAA,SAAS;AAEZ,GALc,EAKZ,CAACP,OAAD,CALY,CAAf;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEI,QAAC,UAAD;AAAa,MAAA,SAAS,EAAEM;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzCD;;GAAMT,M;;KAAAA,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from 'react';\r\n import ClinicForm from \"./ClinicForm\";\r\n import ClinicsTable from \"./ClinicsTable\";\r\nimport {getAllClinics} from \"./Clinics Functions/ClinicsFunctions\";\r\n\r\nconst Clinic = (props) => {\r\n\r\n\r\n    const clinicId = props.match !== undefined ? props.match.params.id : null\r\n    const [upadate,setUpdate]=useState(true)\r\n    const [clinics, setClinics] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"--clinic update\")\r\n    })\r\n\r\n    function refresh() {\r\n        setUpdate(!upadate)\r\n    }\r\n\r\n    const fetchData=async () => {\r\n\r\n         console.log(\"--clinic table,,,,, effect\")\r\n    setClinics(await getAllClinics()) ;\r\n        console.log('clinic data from the clinic',clinics)\r\n\r\n    }\r\n    const [loading, setLoading] = useState(true)\r\n    useLayoutEffect(() => {\r\n\r\n\r\n        fetchData()\r\n\r\n    }, [upadate])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"clinics-wrapper\">\r\n\r\n            <ClinicForm  setUpdate={refresh}/>\r\n            <ClinicsTable clinics={clinics}  />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clinic;"]},"metadata":{},"sourceType":"module"}