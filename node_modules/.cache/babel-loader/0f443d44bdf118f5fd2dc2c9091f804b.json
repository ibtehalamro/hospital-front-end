{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Waiting Queue\\\\WaitingQueueForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllClinics } from \"../../Actions/ClinicActions\";\nimport { createQueue } from \"../../Actions/WaityingQueueAtions\";\nimport { useHistory } from \"react-router\";\nimport apiURL from \"../../Store/apiURL\";\nimport { webApiURL } from \"../Constants/URLConstants\";\n\nfunction WaitingQueueForm(props) {\n  _s();\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const dispatch = useDispatch();\n  const [employees, setEmployees] = useState([]);\n\n  const getAllEmployees = async () => {\n    try {\n      const res = await apiURL.get(webApiURL.employee.getAllEmployees);\n      setEmployees(res.data);\n    } catch (e) {}\n  };\n\n  const onSubmit = data => {\n    dispatch(createQueue({\n      clinic: data.clinicName,\n      patient: {\n        id: props.location.state.patient.id\n      },\n      patientFullName: name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName,\n      employee: {\n        id: data.employee\n      }\n    }, history));\n  };\n\n  useLayoutEffect(() => {\n    dispatch(getAllClinics());\n    getAllEmployees();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"waiting-queue-form-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center text-info\",\n      children: \"Add patient to waiting queue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-secondary\",\n      children: [\"Patient ID : \", props.location.state.patient.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Patient Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clinicName\",\n          children: \"Select clinic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"clinicName\",\n          name: \"clinicName\",\n          ref: register,\n          children: clinics.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.clinicName,\n            children: item.clinicName\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"employee\",\n          children: \"Select Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"employee\",\n          name: \"employee\",\n          ref: register,\n          children: employees.map(item => {\n            const name = item.person.personName;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.id,\n              children: name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WaitingQueueForm, \"/S4xkTIeur6NJEGIw3yw9GRRuv4=\", false, function () {\n  return [useHistory, useForm, useDispatch];\n});\n\n_c = WaitingQueueForm;\nexport default WaitingQueueForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitingQueueForm\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Waiting Queue/WaitingQueueForm.js"],"names":["React","useLayoutEffect","useState","useForm","useDispatch","useSelector","getAllClinics","createQueue","useHistory","apiURL","webApiURL","WaitingQueueForm","props","history","register","handleSubmit","errors","dispatch","employees","setEmployees","getAllEmployees","res","get","employee","data","e","onSubmit","clinic","clinicName","patient","id","location","state","patientFullName","name","firstName","parentName","grandName","familyName","clinics","map","item","person","personName"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAllClinics} from \"../../Actions/ClinicActions\";\r\nimport {createQueue} from \"../../Actions/WaityingQueueAtions\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nimport apiURL from \"../../Store/apiURL\";\r\nimport {webApiURL} from \"../Constants/URLConstants\";\r\n\r\nfunction WaitingQueueForm(props) {\r\n    const history = useHistory();\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const [employees, setEmployees] = useState([])\r\n    const getAllEmployees = async () => {\r\n        try {\r\n            const res = await apiURL.get(webApiURL.employee.getAllEmployees)\r\n            setEmployees(res.data)\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(createQueue({\r\n\r\n\r\n            clinic: data.clinicName,\r\n            patient: {id: props.location.state.patient.id},\r\n            patientFullName: name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName,\r\n            employee: {id: data.employee}\r\n        }, history))\r\n    }\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(getAllClinics())\r\n        getAllEmployees()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"waiting-queue-form-wrapper\">\r\n            <h3 className=\"text-center text-info\">Add patient to waiting queue</h3>\r\n            <p className=\"text-secondary\">\r\n                Patient ID : {props.location.state.patient.id}\r\n            </p>\r\n            <div className=\"d-inline\">\r\n                <h3>Patient Name</h3>\r\n                <h6>{name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName}</h6>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"clinicName\">Select clinic</label>\r\n                    <select className=\"form-control\" id=\"clinicName\" name=\"clinicName\" ref={register}>\r\n                        {clinics.map(item => (\r\n                            <option key={item.id} value={item.clinicName}>\r\n                                {item.clinicName}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"employee\">Select Employee</label>\r\n                    <select className=\"form-control\" id=\"employee\" name=\"employee\" ref={register}>\r\n                        {employees.map(item => {\r\n                                const name = item.person.personName;\r\n                                return <option key={item.id} value={item.id}>\r\n                                    {name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName}\r\n                                </option>\r\n                            }\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                <input type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WaitingQueueForm;"]},"metadata":{},"sourceType":"module"}