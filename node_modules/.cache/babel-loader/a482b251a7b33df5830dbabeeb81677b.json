{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\User Management\\\\Security\\\\SecureRoute.js\";\nimport { Redirect, Route } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nconst security = useSelector(state => state.security);\n\nconst SecuredRoute = ({\n  component: Component,\n  ...otherProps\n}) => /*#__PURE__*/_jsxDEV(Route, { ...otherProps,\n  render: props => security.validToken === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 17\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 6\n}, this);\n\n_c = SecuredRoute;\nexport default SecuredRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecuredRoute\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/User Management/Security/SecureRoute.js"],"names":["Redirect","Route","useSelector","security","state","SecuredRoute","component","Component","otherProps","props","validToken"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,KAAlB,QAA8B,cAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,MAAMC,QAAQ,GAAGD,WAAW,CAACE,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AAEA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBAEhB,QAAC,KAAD,OACOA,UADP;AAEG,EAAA,MAAM,EAAEC,KAAK,IACTN,QAAQ,CAACO,UAAT,KAAwB,IAAxB,gBACI,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ,gBAGI,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANX;AAAA;AAAA;AAAA;AAAA,QAFL;;KAAMJ,Y;AAeN,eAAeA,YAAf","sourcesContent":["import {Redirect, Route} from \"react-router\";\r\nimport {useSelector} from \"react-redux\";\r\nconst security = useSelector(state => state.security);\r\n\r\nconst SecuredRoute = ({ component: Component, ...otherProps }) => (\r\n\r\n     <Route\r\n        {...otherProps}\r\n        render={props =>\r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\n\r\nexport default SecuredRoute;"]},"metadata":{},"sourceType":"module"}