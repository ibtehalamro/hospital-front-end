{"ast":null,"code":"import { GET_ERRORS } from \"../Redux/Types/Types\";\nimport LoginPage from \"../Components/User Management/LoginPage\";\nexport const errorHandler = (error, dispatch, history) => {\n  if (error.response) {\n    // Request made and server responded\n    console.log(error.response.data);\n    console.log(error.response.status);\n    console.log(error.response.headers);\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.log(error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log('Error from copy', error.message);\n  }\n  /*TODO backend not reached handle that here */\n\n\n  if (error.message === \"Network Error\") {\n    console.log(\"****************\");\n    history.push(\"*\", \"ddddds\");\n  } else {\n    console.log(\"server error\", error.message);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Errors/ErrorHandler.js"],"names":["GET_ERRORS","LoginPage","errorHandler","error","dispatch","history","response","console","log","data","status","headers","request","message","push","type","payload"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AAGA,OAAO,MAAMC,YAAY,GAAK,CAACC,KAAD,EAAOC,QAAP,EAAgBC,OAAhB,KAA4B;AAEtD,MAAIF,KAAK,CAACG,QAAV,EAAoB;AAChB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,QAAN,CAAeG,IAA3B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,QAAN,CAAeI,MAA3B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,QAAN,CAAeK,OAA3B;AACH,GALD,MAKO,IAAIR,KAAK,CAACS,OAAV,EAAmB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACS,OAAlB;AACH,GAHM,MAGA;AACH;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,KAAK,CAACU,OAArC;AACH;AAGD;;;AACA,MAAGV,KAAK,CAACU,OAAN,KAAgB,eAAnB,EAAoC;AAChCN,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb,EAAiB,QAAjB;AACF,GAHF,MAII;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BL,KAAK,CAACU,OAAjC;AACAT,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEf,UADD;AAELgB,MAAAA,OAAO,EAAEb,KAAK,CAACG,QAAN,CAAeG;AAFnB,KAAD,CAAR;AAIH;AACJ,CA5BM","sourcesContent":["import {GET_ERRORS} from \"../Redux/Types/Types\";\r\nimport LoginPage from \"../Components/User Management/LoginPage\";\r\n\r\n\r\nexport const errorHandler =   (error,dispatch,history) => {\r\n\r\n    if (error.response) {\r\n        // Request made and server responded\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n    } else if (error.request) {\r\n        // The request was made but no response was received\r\n        console.log(error.request);\r\n    } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error from copy', error.message);\r\n    }\r\n\r\n\r\n    /*TODO backend not reached handle that here */\r\n    if(error.message===\"Network Error\") {\r\n        console.log(\"****************\")\r\n        history.push(\"*\",\"ddddds\")\r\n     }\r\n    else{\r\n        console.log(\"server error\",error.message)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}