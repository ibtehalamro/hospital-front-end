{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Patient\\\\PatientListTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport PersonCard from \"../../Re-usable/PersonCard\";\nimport { getPatientsListService } from \"./Patient Logic/PatientServices\";\nimport Pagination from \"../../Re-usable/Pagination/Pagination\";\nimport { patientURLS } from \"../../../Constants/URLConstants\";\n\nfunction PatientListTable() {\n  _s();\n\n  const [patient, setPatient] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n\n  const paginate = pageNumber => {\n    console.log('pagination called');\n    setCurrentPage(pageNumber);\n    getPatientList(pageNumber, itemsPerPage);\n  };\n\n  const getPatientList = async (pageNumber, itemsPerPage) => {\n    // this function set the patients array\n    const res = await getPatientsListService(pageNumber, itemsPerPage);\n    setTotalPages(res.data.totalPages);\n    setPatient(res.data.content);\n  };\n\n  useLayoutEffect(() => {\n    let mounted = true;\n    if (mounted) getPatientList(0, itemsPerPage);\n    console.log('mounted', mounted);\n    return () => {\n      console.log('mounted return', mounted);\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" patient-table cards-table-wrapper\",\n    children: [patient && patient.length > 0 ? patient.map((patient, index) => {\n      return /*#__PURE__*/_jsxDEV(PersonCard, {\n        person: patient,\n        infoPageUrl: patientURLS.patientInfo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this);\n    }) : \"no patients found\", /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      current: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PatientListTable, \"W+8yNbSbpuHMaPjA7lfpt2nWQ6c=\");\n\n_c = PatientListTable;\nexport default PatientListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientListTable\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Patient/PatientListTable.js"],"names":["React","useLayoutEffect","useState","PersonCard","getPatientsListService","Pagination","patientURLS","PatientListTable","patient","setPatient","currentPage","setCurrentPage","totalPages","setTotalPages","itemsPerPage","setItemsPerPage","paginate","pageNumber","console","log","getPatientList","res","data","content","mounted","length","map","index","patientInfo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,QAAhC,QAA+C,OAA/C;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAAQC,sBAAR,QAAqC,iCAArC;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAAQC,WAAR,QAA0B,iCAA1B;;AAGA,SAASC,gBAAT,GAA4B;AAAA;;AAExB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMc,QAAQ,GAAIC,UAAD,IAAgB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAR,IAAAA,cAAc,CAACM,UAAD,CAAd;AACAG,IAAAA,cAAc,CAAGH,UAAH,EAAeH,YAAf,CAAd;AAEH,GALD;;AAOA,QAAMM,cAAc,GAAG,OAAQH,UAAR,EAAoBH,YAApB,KAAqC;AACxD;AACA,UAAMO,GAAG,GAAG,MAAMjB,sBAAsB,CAAEa,UAAF,EAAcH,YAAd,CAAxC;AACAD,IAAAA,aAAa,CAACQ,GAAG,CAACC,IAAJ,CAASV,UAAV,CAAb;AACAH,IAAAA,UAAU,CAACY,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAV;AACH,GALD;;AAOAtB,EAAAA,eAAe,CAAC,MAAM;AAC1B,QAAIuB,OAAO,GAAC,IAAZ;AACA,QAAGA,OAAH,EACQJ,cAAc,CAAE,CAAF,EAAKN,YAAL,CAAd;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBK,OAAtB;AAEQ,WAAO,MAAM;AAACN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,OAA7B;AAEVA,MAAAA,OAAO,GAAG,KAAV;AACH,KAHD;AAIH,GAVc,EAUZ,EAVY,CAAf;AAaA,sBAEI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,eAGQhB,OAAO,IAAIA,OAAO,CAACiB,MAAR,GAAiB,CAA5B,GACIjB,OAAO,CAACkB,GAAR,CAAY,CAAClB,OAAD,EAAUmB,KAAV,KAAoB;AAC5B,0BAAO,QAAC,UAAD;AAAwB,QAAA,MAAM,EAAEnB,OAAhC;AAAyC,QAAA,WAAW,EAAEF,WAAW,CAACsB;AAAlE,SAAiBD,KAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,CADJ,GAKM,mBARd,eAWI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEf,UAAxB;AAAoC,MAAA,OAAO,EAAEF,WAA7C;AAA0D,MAAA,QAAQ,EAAEM;AAApE;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH;;GApDQT,gB;;KAAAA,gB;AAsDT,eAAeA,gBAAf","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\n\r\nimport PersonCard from \"../../Re-usable/PersonCard\";\r\nimport {getPatientsListService} from \"./Patient Logic/PatientServices\";\r\nimport Pagination from \"../../Re-usable/Pagination/Pagination\";\r\nimport {patientURLS} from \"../../../Constants/URLConstants\";\r\n\r\n\r\nfunction PatientListTable() {\r\n\r\n    const [patient, setPatient] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [itemsPerPage, setItemsPerPage] = useState(10)\r\n\r\n    const paginate = (pageNumber) => {\r\n        console.log('pagination called')\r\n        setCurrentPage(pageNumber)\r\n        getPatientList(  pageNumber, itemsPerPage)\r\n\r\n    }\r\n\r\n    const getPatientList = async ( pageNumber, itemsPerPage) => {\r\n        // this function set the patients array\r\n        const res = await getPatientsListService( pageNumber, itemsPerPage)\r\n        setTotalPages(res.data.totalPages)\r\n        setPatient(res.data.content)\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\nlet mounted=true;\r\nif(mounted)\r\n        getPatientList( 0, itemsPerPage)\r\nconsole.log('mounted',mounted)\r\n\r\n        return(() => {console.log('mounted return',mounted)\r\n\r\n            mounted = false\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <div className=\" patient-table cards-table-wrapper\">\r\n\r\n            {\r\n                patient && patient.length > 0 ?\r\n                    patient.map((patient, index) => {\r\n                        return <PersonCard key={index} person={patient} infoPageUrl={patientURLS.patientInfo}/>\r\n                    })\r\n\r\n                    : \"no patients found\"\r\n            }\r\n\r\n            <Pagination totalPages={totalPages} current={currentPage} paginate={paginate}/>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PatientListTable;\r\n"]},"metadata":{},"sourceType":"module"}