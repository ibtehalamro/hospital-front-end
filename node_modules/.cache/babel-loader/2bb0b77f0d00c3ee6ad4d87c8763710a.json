{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Clinics Components\\\\ClinicForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { postClinicService } from \"./Clinics Functions/ClinicsServices\";\nimport TextInputCustom from \"../../Re-usable/FormComponents/TextInputCustom\";\nimport { messages, registerObject } from \"../../../Common Functions/FormObjects\";\nimport { useHistory } from \"react-router\";\nimport { clinicsURLs as clinicsURL } from \"../../../Constants/URLConstants\";\n\nfunction ClinicForm({\n  clinic\n}) {\n  _s();\n\n  const history = useHistory();\n  const {\n    handleSubmit,\n    errors,\n    setError,\n    register\n  } = useForm(clinic === undefined ? {} : {\n    defaultValues: {\n      clinicName: clinic.clinicName\n    }\n  });\n\n  function onSubmit(data, e) {\n    data.clinicName = data.clinicName.trim();\n    if (clinic !== undefined) data = { ...data,\n      id: clinic.id\n    };\n\n    try {\n      postClinicService(data, setError).then(() => {\n        e.target.reset();\n        history.push(`${clinicsURL.clinic}/${clinicsURL.clinics}`);\n      });\n    } catch (e) {\n      console.log(\"error on submit\");\n      return null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" clinic-form-container\",\n    children: [clinic === undefined ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mainTitle\",\n      children: \"Add Clinic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Clinic \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"previous name : \", clinic.clinicName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-bold\",\n        children: \"Choose a unique clinic name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(TextInputCustom, {\n          field: \"clinicName\",\n          label: \"Clinic Name\",\n          errorMessages: messages,\n          form: {\n            register,\n            errors,\n            registerObject\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ClinicForm, \"NH8B6yaMTGxZvrGp/hpoPBd4mgs=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = ClinicForm;\nexport default ClinicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClinicForm\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Clinics Components/ClinicForm.js"],"names":["React","useEffect","useForm","postClinicService","TextInputCustom","messages","registerObject","useHistory","clinicsURLs","clinicsURL","ClinicForm","clinic","history","handleSubmit","errors","setError","register","undefined","defaultValues","clinicName","onSubmit","data","e","trim","id","then","target","reset","push","clinics","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,iBAAR,QAAgC,qCAAhC;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,uCAAvC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,WAAW,IAAIC,UAAvB,QAAwC,iCAAxC;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AAAA;;AAC3B,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,QAAM;AAACM,IAAAA,YAAD;AAAeC,IAAAA,MAAf;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA4Cd,OAAO,CAACS,MAAM,KAAGM,SAAT,GAAmB,EAAnB,GAAuB;AAACC,IAAAA,aAAa,EAAC;AAACC,MAAAA,UAAU,EAACR,MAAM,CAACQ;AAAnB;AAAf,GAAxB,CAAzD;;AAEA,WAASC,QAAT,CAAkBC,IAAlB,EAAwBC,CAAxB,EAA2B;AACvBD,IAAAA,IAAI,CAACF,UAAL,GAAgBE,IAAI,CAACF,UAAL,CAAgBI,IAAhB,EAAhB;AACC,QAAIZ,MAAM,KAAIM,SAAd,EACGI,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAAUG,MAAAA,EAAE,EAAEb,MAAM,CAACa;AAArB,KAAP;;AACZ,QAAG;AACCrB,MAAAA,iBAAiB,CAACkB,IAAD,EAAMN,QAAN,CAAjB,CAAiCU,IAAjC,CAAsC,MAAM;AACxCH,QAAAA,CAAC,CAACI,MAAF,CAASC,KAAT;AACAf,QAAAA,OAAO,CAACgB,IAAR,CAAc,GAAEnB,UAAU,CAACE,MAAO,IAAGF,UAAU,CAACoB,OAAQ,EAAxD;AACH,OAHD;AAIH,KALD,CAKC,OAAOP,CAAP,EAAS;AACNQ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACJ,aAAO,IAAP;AACC;AAEI;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,eACFpB,MAAM,KAAKM,SAAX,gBAAuB;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,gBAEO;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,uCAAqBN,MAAM,CAACQ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHL,eAOC;AAAA,8BAEI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,QAAQ,EAAEN,YAAY,CAACO,QAAD,CAA5B;AAAA,gCACI,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,YAAvB;AAAoC,UAAA,KAAK,EAAC,aAA1C;AAAwD,UAAA,aAAa,EAAEf,QAAvE;AACiB,UAAA,IAAI,EAAE;AAACW,YAAAA,QAAD;AAAWF,YAAAA,MAAX;AAAmBR,YAAAA;AAAnB;AADvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH;;GAzCQI,U;UACWH,U,EAEkCL,O;;;KAH7CQ,U;AA2CT,eAAeA,UAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {postClinicService} from \"./Clinics Functions/ClinicsServices\";\r\nimport TextInputCustom from \"../../Re-usable/FormComponents/TextInputCustom\";\r\nimport {messages, registerObject} from \"../../../Common Functions/FormObjects\";\r\nimport {useHistory} from \"react-router\";\r\nimport {clinicsURLs as clinicsURL} from \"../../../Constants/URLConstants\";\r\n\r\n\r\nfunction ClinicForm({ clinic}) {\r\n    const history = useHistory();\r\n\r\n    const {handleSubmit, errors,setError, register} = useForm(clinic===undefined?{ }:{defaultValues:{clinicName:clinic.clinicName}});\r\n\r\n    function onSubmit(data, e) {\r\n        data.clinicName=data.clinicName.trim();\r\n         if (clinic!== undefined)\r\n            data = {...data, id: clinic.id }\r\ntry{\r\n    postClinicService(data,setError).then(() => {\r\n        e.target.reset();\r\n        history.push(`${clinicsURL.clinic}/${clinicsURL.clinics}`)\r\n    });\r\n}catch (e){\r\n    console.log(\"error on submit\")\r\nreturn null\r\n}\r\n\r\n    }\r\n\r\n    return <div className=\" clinic-form-container\">\r\n        {clinic === undefined ? <h1 className=\"mainTitle\">Add Clinic</h1>\r\n                :\r\n                <div>\r\n                    <h1>Edit Clinic </h1>\r\n                    <h4>previous name : {clinic.clinicName}</h4>\r\n                </div>}\r\n            <>\r\n\r\n                <p className=\"font-weight-bold\">Choose a unique clinic name</p>\r\n                <form onSubmit={handleSubmit(onSubmit)} >\r\n                    <TextInputCustom field=\"clinicName\" label=\"Clinic Name\" errorMessages={messages}\r\n                                     form={{register, errors, registerObject}}/>\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n            </>\r\n\r\n        </div>\r\n\r\n\r\n}\r\n\r\nexport default ClinicForm;"]},"metadata":{},"sourceType":"module"}