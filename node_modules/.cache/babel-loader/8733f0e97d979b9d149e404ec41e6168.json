{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Re-usable\\\\Form Components\\\\NumberInputCustom.js\";\nimport React from 'react';\nimport ClassNames from 'classnames';\n\nconst NumberInputCustom = ({\n  field,\n  form: {\n    register,\n    errors,\n    registerObject\n  },\n  label,\n  errorMessages,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: field,\n      children: [label, \" :\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: ClassNames('form-control', {\n        \"is-invalid\": errors[field]\n      }),\n      name: field,\n      ref: register(registerObject),\n      onChange: onChange,\n      type: \"number\"\n    }, field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), errors[field] && errors[field].type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \" p-2 invalid-feedback fa fa-exclamation-triangle\",\n      children: errorMessages && label + errorMessages[errors[field].type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = NumberInputCustom;\nexport default NumberInputCustom;\n/*\r\n* Example to use it\r\n   <NumberInputCustom field=\"socialNumber\" label=\"Social Number\" errorMessages={messages}\r\n                                       form={{register, errors}}/>\r\n* */\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInputCustom\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Re-usable/Form Components/NumberInputCustom.js"],"names":["React","ClassNames","NumberInputCustom","field","form","register","errors","registerObject","label","errorMessages","onChange","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAI,EAAE;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,GAAd;AAAkDC,EAAAA,KAAlD;AAAyDC,EAAAA,aAAzD;AAAwEC,EAAAA;AAAxE,CAAD,KAAuF;AAC7G,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEP,KAAhB;AAAA,iBACKK,KADL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,SAAS,EAAEP,UAAU,CAAC,cAAD,EAAiB;AAAC,sBAAcK,MAAM,CAACH,KAAD;AAArB,OAAjB,CAA5B;AAEO,MAAA,IAAI,EAAEA,KAFb;AAGO,MAAA,GAAG,EAAEE,QAAQ,CAACE,cAAD,CAHpB;AAIO,MAAA,QAAQ,EAAEG,QAJjB;AAKO,MAAA,IAAI,EAAC;AALZ,OACYP,KADZ;AAAA;AAAA;AAAA;AAAA,YAJJ,EAWKG,MAAM,CAACH,KAAD,CAAN,IAAiBG,MAAM,CAACH,KAAD,CAAN,CAAcQ,IAAd,KAAuB,UAAxC,iBACD;AAAG,MAAA,SAAS,EAAC,kDAAb;AAAA,gBACKF,aAAa,IACdD,KAAK,GAAGC,aAAa,CAACH,MAAM,CAACH,KAAD,CAAN,CAAcQ,IAAf;AAFzB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CArBD;;KAAMT,iB;AAuBN,eAAeA,iBAAf;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ClassNames from 'classnames';\r\n\r\n\r\nconst NumberInputCustom = ({field, form: {register, errors, registerObject}, label, errorMessages, onChange}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={field}>\r\n                {label} :\r\n            </label>\r\n            <input className={ClassNames('form-control', {\"is-invalid\": errors[field]})}\r\n                   key={field}\r\n                   name={field}\r\n                   ref={register(registerObject)}\r\n                   onChange={onChange}\r\n                   type=\"number\"\r\n            />\r\n            {errors[field] && errors[field].type === \"required\" &&\r\n            <p className=\" p-2 invalid-feedback fa fa-exclamation-triangle\">\r\n                {errorMessages &&\r\n                label + errorMessages[errors[field].type]}\r\n            </p>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NumberInputCustom;\r\n/*\r\n* Example to use it\r\n   <NumberInputCustom field=\"socialNumber\" label=\"Social Number\" errorMessages={messages}\r\n                                       form={{register, errors}}/>\r\n* */"]},"metadata":{},"sourceType":"module"}