{"ast":null,"code":"import api from '../../../Re-usable/Api Url/apiURL';\nimport { frontToBackPatient } from \"../../../../Common Functions/PersonFunctions\";\nimport { patientURLS } from \"../../../../Constants/URLConstants\";\nexport const getPatient = async (setPatient, patientId) => {\n  try {\n    const result = await api.get(patientURLS.getPatient + `/${patientId}`);\n    console.log(\"m\", result.data);\n    setPatient(result.data);\n  } catch (e) {}\n};\nexport const getPatientInformation = async (setPatient, patientId) => {\n  const patient = api.get(patientURLS.getPatient + `/${patientId}`);\n  const invoices = api.get(patientURLS.getPatient + `/${patientId}`);\n};\nexport const postPatient = async (patient, setServerError, setAdded, e) => {\n  setServerError(\"\");\n  setAdded(false);\n  patient = frontToBackPatient(patient);\n\n  try {\n    const result = await api.post(patientURLS.postPatient, patient);\n\n    if (result.status === 201) {\n      setAdded(true);\n      setTimeout(function () {\n        setAdded(false);\n      }, 5000);\n    }\n\n    e.target.reset();\n  } catch (e) {\n    console.log(e.response.data); //TODO handle validation errors\n\n    setServerError(e.response.data);\n  }\n};\nexport const submitPatient = patient => {\n  postPatient(patient).then(value => console.log('patient submitted'));\n};\nexport const getPatientsList = async (setPatient, setTotalPages, pageNumber, itemsPerPage) => {\n  try {\n    const res = await api.get(`/patient/all?page=${pageNumber}&size=${itemsPerPage}`);\n    setTotalPages(res.data.totalPages);\n    setPatient(res.data.content);\n    return res.data.content;\n  } catch (e) {\n    console.log(e.response.data);\n  }\n};","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Patient/Patient Logic/PatientFunctions.js"],"names":["api","frontToBackPatient","patientURLS","getPatient","setPatient","patientId","result","get","console","log","data","e","getPatientInformation","patient","invoices","postPatient","setServerError","setAdded","post","status","setTimeout","target","reset","response","submitPatient","then","value","getPatientsList","setTotalPages","pageNumber","itemsPerPage","res","totalPages","content"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,mCAAhB;AACA,SAAQC,kBAAR,QAAiC,8CAAjC;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,UAAP,EAAmBC,SAAnB,KAAiC;AAEvD,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQL,WAAW,CAACC,UAAZ,GAA0B,IAAGE,SAAU,EAA/C,CAArB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,MAAM,CAACI,IAAxB;AACAN,IAAAA,UAAU,CAACE,MAAM,CAACI,IAAR,CAAV;AACH,GALD,CAKE,OAAOC,CAAP,EAAU,CAEX;AAGJ,CAZM;AAcP,OAAO,MAAMC,qBAAqB,GAAG,OAAOR,UAAP,EAAmBC,SAAnB,KAAiC;AAClE,QAAMQ,OAAO,GAAIb,GAAG,CAACO,GAAJ,CAAQL,WAAW,CAACC,UAAZ,GAA0B,IAAGE,SAAU,EAA/C,CAAjB;AACA,QAAMS,QAAQ,GAAGd,GAAG,CAACO,GAAJ,CAAQL,WAAW,CAACC,UAAZ,GAA0B,IAAGE,SAAU,EAA/C,CAAjB;AAEH,CAJM;AAOP,OAAO,MAAMU,WAAW,GAAG,OAAOF,OAAP,EAAgBG,cAAhB,EAAgCC,QAAhC,EAA0CN,CAA1C,KAAgD;AAEvEK,EAAAA,cAAc,CAAC,EAAD,CAAd;AACAC,EAAAA,QAAQ,CAAC,KAAD,CAAR;AAEAJ,EAAAA,OAAO,GAAGZ,kBAAkB,CAACY,OAAD,CAA5B;;AACA,MAAI;AACA,UAAMP,MAAM,GAAG,MAAMN,GAAG,CAACkB,IAAJ,CAAShB,WAAW,CAACa,WAArB,EAAkCF,OAAlC,CAArB;;AAGA,QAAIP,MAAM,CAACa,MAAP,KAAkB,GAAtB,EAA2B;AACvBF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAG,MAAAA,UAAU,CAAC,YAAY;AACnBH,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;;AAEDN,IAAAA,CAAC,CAACU,MAAF,CAASC,KAAT;AACH,GAZD,CAYE,OAAOX,CAAP,EAAU;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACY,QAAF,CAAWb,IAAvB,EADQ,CAGR;;AACAM,IAAAA,cAAc,CAACL,CAAC,CAACY,QAAF,CAAWb,IAAZ,CAAd;AACH;AAEJ,CAzBM;AA2BP,OAAO,MAAMc,aAAa,GAAIX,OAAD,IAAa;AAGtCE,EAAAA,WAAW,CAACF,OAAD,CAAX,CAAqBY,IAArB,CAA0BC,KAAK,IAAIlB,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAnC;AACH,CAJM;AAOP,OAAO,MAAMkB,eAAe,GAAG,OAAOvB,UAAP,EAAmBwB,aAAnB,EAAkCC,UAAlC,EAA8CC,YAA9C,KAA+D;AAC1F,MAAI;AACA,UAAMC,GAAG,GAAG,MAAM/B,GAAG,CAACO,GAAJ,CAAS,qBAAoBsB,UAAW,SAAQC,YAAa,EAA7D,CAAlB;AACAF,IAAAA,aAAa,CAACG,GAAG,CAACrB,IAAJ,CAASsB,UAAV,CAAb;AACA5B,IAAAA,UAAU,CAAC2B,GAAG,CAACrB,IAAJ,CAASuB,OAAV,CAAV;AAEA,WAAOF,GAAG,CAACrB,IAAJ,CAASuB,OAAhB;AAEH,GAPD,CAOE,OAAOtB,CAAP,EAAU;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACY,QAAF,CAAWb,IAAvB;AACH;AAEJ,CAZM","sourcesContent":["import api from '../../../Re-usable/Api Url/apiURL'\r\nimport {frontToBackPatient} from \"../../../../Common Functions/PersonFunctions\";\r\nimport {patientURLS} from \"../../../../Constants/URLConstants\";\r\n\r\nexport const getPatient = async (setPatient, patientId) => {\r\n\r\n    try {\r\n        const result = await api.get(patientURLS.getPatient + `/${patientId}`);\r\n\r\n        console.log(\"m\", result.data)\r\n        setPatient(result.data)\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getPatientInformation = async (setPatient, patientId) => {\r\n    const patient =  api.get(patientURLS.getPatient + `/${patientId}`);\r\n    const invoices=  api.get(patientURLS.getPatient + `/${patientId}`);\r\n\r\n}\r\n\r\n\r\nexport const postPatient = async (patient, setServerError, setAdded, e) => {\r\n\r\n    setServerError(\"\");\r\n    setAdded(false)\r\n\r\n    patient = frontToBackPatient(patient);\r\n    try {\r\n        const result = await api.post(patientURLS.postPatient, patient);\r\n\r\n\r\n        if (result.status === 201) {\r\n            setAdded(true)\r\n            setTimeout(function () {\r\n                setAdded(false)\r\n            }, 5000);\r\n        }\r\n\r\n        e.target.reset();\r\n    } catch (e) {\r\n        console.log(e.response.data)\r\n\r\n        //TODO handle validation errors\r\n        setServerError(e.response.data);\r\n    }\r\n\r\n}\r\n\r\nexport const submitPatient = (patient) => {\r\n\r\n\r\n    postPatient(patient).then(value => console.log('patient submitted'));\r\n}\r\n\r\n\r\nexport const getPatientsList = async (setPatient, setTotalPages, pageNumber, itemsPerPage) => {\r\n    try {\r\n        const res = await api.get(`/patient/all?page=${pageNumber}&size=${itemsPerPage}`)\r\n        setTotalPages(res.data.totalPages)\r\n        setPatient(res.data.content)\r\n\r\n        return res.data.content\r\n\r\n    } catch (e) {\r\n        console.log(e.response.data)\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}