{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Waiting Queue\\\\WaitingQueueList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { deletePatientFromWaitingQueue, getAllQueuesService } from \"./Waiting Queue Logic/WaitingQueueServices\";\nimport { invoicesURL } from \"../../../Constants/URLConstants\";\nimport { Link } from \"react-router-dom\";\n\nfunction WaitingQueueList() {\n  _s();\n\n  const QueueTableBody = [\"id\", \"patientFullName\"];\n  const [waitingQueue, setWaitingQueue] = useState([]);\n  const [deleted, setDeleted] = useState(\"\");\n\n  const fetchData = async () => {\n    setWaitingQueue(await getAllQueuesService());\n  };\n\n  useLayoutEffect(() => {\n    let mounted = true;\n    if (mounted) fetchData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const deletePatientFromQueueMethod = async id => {\n    const res = await deletePatientFromWaitingQueue(id);\n\n    if (res.status === 201) {\n      setTimeout(() => setDeleted(\"\"), 1500);\n      setDeleted(\"Patient Router deleted\");\n      await fetchData();\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"waiting-queue-list-wrapper\",\n    children: [deleted, waitingQueue === undefined || Object.keys(waitingQueue).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waiting-queue-list-wrapper text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add patients to the waiting Queue to view them\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this) : Object.keys(waitingQueue).map(key => {\n      if (waitingQueue[key].length !== 0) {\n        let value = waitingQueue[key];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waiting-queue-list \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center \",\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"number\",\n                  children: \"Queue Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"number\",\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Patient Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Charge Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Remove from Queue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: value.map((body, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), QueueTableBody.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: body[item]\n                  }, item, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 56\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"text-success font-weight-bold\",\n                    to: {\n                      pathname: `${invoicesURL.invoice}/${invoicesURL.invoiceForm}/${body[\"patient\"].id}`,\n                      state: {\n                        patient: body[\"patientFullName\"],\n                        employeeId: body[\"employee\"].id\n                      }\n                    },\n                    children: \"Charge Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button\",\n                    onClick: () => deletePatientFromQueueMethod(body.id),\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this)]\n              }, body.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, this);\n      } else {\n        delete waitingQueue[key];\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n_s(WaitingQueueList, \"WUyNpeGDacPxmPSuNybxgs4GBNA=\");\n\n_c = WaitingQueueList;\nexport default WaitingQueueList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitingQueueList\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Waiting Queue/WaitingQueueList.js"],"names":["React","useLayoutEffect","useState","deletePatientFromWaitingQueue","getAllQueuesService","invoicesURL","Link","WaitingQueueList","QueueTableBody","waitingQueue","setWaitingQueue","deleted","setDeleted","fetchData","mounted","deletePatientFromQueueMethod","id","res","status","setTimeout","undefined","Object","keys","length","map","key","value","body","index","item","pathname","invoice","invoiceForm","state","patient","employeeId"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\n\r\n\r\nimport {deletePatientFromWaitingQueue, getAllQueuesService} from \"./Waiting Queue Logic/WaitingQueueServices\";\r\nimport {invoicesURL} from \"../../../Constants/URLConstants\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction WaitingQueueList() {\r\n    const QueueTableBody = [\r\n        \"id\",\r\n        \"patientFullName\",\r\n    ]\r\n    const [waitingQueue, setWaitingQueue] = useState([])\r\n    const [deleted, setDeleted] = useState(\"\")\r\n\r\n    const fetchData = async () => {\r\n        setWaitingQueue(await getAllQueuesService())\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        let mounted=true;\r\n\r\n        if (mounted)\r\n        fetchData()\r\n\r\n        return ()=>{mounted=false}\r\n    }, [])\r\n\r\n\r\n    const deletePatientFromQueueMethod = async (id) => {\r\n        const res = await deletePatientFromWaitingQueue(id)\r\n        if (res.status === 201) {\r\n            setTimeout(() => setDeleted(\"\"), 1500)\r\n            setDeleted(\"Patient Router deleted\")\r\n            await fetchData()\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return <div className=\"waiting-queue-list-wrapper\">\r\n        {deleted}\r\n        {(waitingQueue === undefined || Object.keys(waitingQueue).length === 0) ?\r\n            <div className=\"waiting-queue-list-wrapper text-center\">\r\n                <h4>Add patients to the waiting Queue to view them</h4>\r\n            </div>\r\n            :\r\n            Object.keys(waitingQueue).map((key) => {\r\n                    if (waitingQueue[key].length !== 0) {\r\n\r\n                        let value = waitingQueue[key];\r\n                        return <div key={key} className=\"waiting-queue-list \">\r\n                            <h1 className=\"text-center \">{key}</h1>\r\n\r\n                            <hr/>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th className={\"number\"}>Queue Number</th>\r\n                                    <th className={\"number\"}>ID</th>\r\n                                    <th>Patient Full Name</th>\r\n                                    <th>Charge Patient</th>\r\n                                    <th>Remove from Queue</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {value.map((body, index) =>\r\n                                    <tr key={body.id}>\r\n                                        <td>{index + 1}</td>\r\n                                        {QueueTableBody.map((item) => {\r\n                                                return <td key={item}>\r\n                                                    {body[item]}\r\n                                                </td>\r\n                                            }\r\n                                        )}\r\n                                        <td>\r\n                                            <Link className=\"text-success font-weight-bold\" to={{\r\n                                                pathname: `${invoicesURL.invoice}/${invoicesURL.invoiceForm}/${body[\"patient\"].id}`,\r\n                                                state: {\r\n                                                    patient: body[\"patientFullName\"],\r\n                                                    employeeId: body[\"employee\"].id\r\n                                                }\r\n                                            }}>Charge Patient</Link>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className=\"delete-button\"\r\n                                                    onClick={() => deletePatientFromQueueMethod(body.id)}>delete\r\n                                            </button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                )\r\n                                }\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    } else {\r\n                        delete waitingQueue[key]\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    </div>;\r\n}\r\n\r\nexport default WaitingQueueList;"]},"metadata":{},"sourceType":"module"}