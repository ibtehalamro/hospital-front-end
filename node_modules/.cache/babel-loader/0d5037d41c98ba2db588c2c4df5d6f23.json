{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\Components\\\\Main Content\\\\Patient\\\\FindPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { routeURLs, webApiURL } from \"../Constants/URLConstants\";\nimport TextInputCustom from \"../Form Components/TextInputCustom\";\nimport TableWithModify from \"../Common Components/TableWithModify\";\nimport apiURL from \"../../Store/apiURL\";\nimport { getPersonAge } from \"../../Common Functions/PersonFunctions\";\nimport { messages, registerObject } from \"../../Common Functions/FormObjects\";\n\nfunction FindPatient(props) {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n  const [patientsList, setPatientsList] = useState([]); //result of searching the patient name stored here as array\n\n  const [serverError, setServerError] = useState(); //if there is server errors returned stored here\n\n  const getPatients = async name => {\n    //method to get the patients list based on the person name if there is any error it is stored in the --> serverError\n    console.log(name);\n\n    try {\n      const res = await apiURL.get(webApiURL.patient.findPatientByName + name);\n      setPatientsList(res.data);\n    } catch (e) {\n      if (e.response) setServerError(e.response.data);\n      setPatientsList([]);\n    }\n  };\n\n  const onSubmit = e => {};\n\n  const onChange = e => {\n    setServerError(\"\");\n\n    if (e.target.value.length === 0) {\n      setPatientsList([]);\n    }\n\n    if (e.target.value.length > 0) {\n      getPatients(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" ml-auto mr-auto mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Type the patient name then locate him in the bellow list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-50\",\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(TextInputCustom, {\n        field: \"firstName\",\n        label: \"First Name\",\n        errorMessages: messages,\n        form: {\n          register,\n          errors,\n          registerObject\n        },\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-bold text-danger\",\n      children: serverError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }, this), patientsList !== undefined && patientsList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TableWithModify, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: patientsList.map(patient => {\n            const name = patient.person.personName;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [getPersonAge(patient.person.dateOfBirth), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"   \", patient.person.dateOfBirth]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: routeURLs.waitingQueueForm,\n                    state: {\n                      patient: patient\n                    }\n                  },\n                  children: \"Add to queue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FindPatient, \"G+eOormXrHNpRsfG659DyFV+JIs=\", false, function () {\n  return [useForm];\n});\n\n_c = FindPatient;\nexport default FindPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindPatient\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Components/Main Content/Patient/FindPatient.js"],"names":["React","useState","useForm","Link","routeURLs","webApiURL","TextInputCustom","TableWithModify","apiURL","getPersonAge","messages","registerObject","FindPatient","props","register","errors","handleSubmit","patientsList","setPatientsList","serverError","setServerError","getPatients","name","console","log","res","get","patient","findPatientByName","data","e","response","onSubmit","onChange","target","value","length","message","undefined","map","person","personName","id","firstName","parentName","grandName","familyName","dateOfBirth","pathname","waitingQueueForm","state"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {routeURLs, webApiURL} from \"../Constants/URLConstants\";\r\nimport TextInputCustom from \"../Form Components/TextInputCustom\";\r\nimport TableWithModify from \"../Common Components/TableWithModify\";\r\nimport apiURL from \"../../Store/apiURL\";\r\nimport {getPersonAge} from \"../../Common Functions/PersonFunctions\";\r\nimport {messages, registerObject} from \"../../Common Functions/FormObjects\";\r\n\r\nfunction FindPatient(props) {\r\n    const {register, errors, handleSubmit} = useForm();\r\n    const [patientsList, setPatientsList] = useState([])//result of searching the patient name stored here as array\r\n    const [serverError, setServerError] = useState()//if there is server errors returned stored here\r\n\r\n    const getPatients = async (name) => {//method to get the patients list based on the person name if there is any error it is stored in the --> serverError\r\n        console.log(name)\r\n        try {\r\n            const res = await apiURL.get(webApiURL.patient.findPatientByName+name)\r\n            setPatientsList(res.data)\r\n        } catch (e) {\r\n            if(e.response)\r\n            setServerError(e.response.data)\r\n            setPatientsList([])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n    };\r\n    const onChange = (e) => {\r\n        setServerError(\"\")\r\n        if (e.target.value.length === 0) {\r\n            setPatientsList([])\r\n        }\r\n        if (e.target.value.length > 0) {\r\n            getPatients(e.target.value);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\" ml-auto mr-auto mt-5\">\r\n\r\n            <h3>Type the patient name then locate him in the bellow list</h3>\r\n            <br/>\r\n\r\n            <form className={\"w-50\"} onSubmit={handleSubmit(onSubmit)}>\r\n                <TextInputCustom field=\"firstName\" label=\"First Name\" errorMessages={messages}\r\n                                 form={{register, errors, registerObject}} onChange={onChange}/>\r\n            </form>\r\n            {serverError && <p className=\"font-weight-bold text-danger\">{serverError.message}</p>}\r\n            {patientsList !== undefined && patientsList.length > 0 ?\r\n                <div className=\"container\">\r\n                    <TableWithModify>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th>Name</th>\r\n                            <th>Age</th>\r\n                            <th>Date of Birth</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {patientsList.map(patient => {\r\n                            const name = patient.person.personName;\r\n                            return (\r\n                                <tr key={patient.id}>\r\n                                    <td>{patient.id}</td>\r\n                                    <td>{name.firstName + \" \" + name.parentName + \" \" + name.grandName + \" \" + name.familyName}</td>\r\n                                    <td>{getPersonAge(patient.person.dateOfBirth)} </td>\r\n                                    <td>   {patient.person.dateOfBirth}</td>\r\n                                    <td><Link to={{\r\n                                        pathname: routeURLs.waitingQueueForm,\r\n                                        state: {\r\n                                            patient: patient\r\n                                        }\r\n                                    }}>Add to queue</Link></td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </TableWithModify>\r\n\r\n                </div>\r\n                : \"\"}\r\n        </div>\r\n    );\r\n}\r\nexport default FindPatient;"]},"metadata":{},"sourceType":"module"}