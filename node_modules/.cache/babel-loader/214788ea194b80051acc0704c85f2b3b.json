{"ast":null,"code":"//this method receive the person birth date and calculate his age\nexport const getPersonAge = d => {\n  return new Date().getFullYear() - new Date(d).getFullYear();\n};\nexport const getFullName = name => {\n  const {\n    firstName,\n    parentName,\n    grandName,\n    familyName\n  } = name;\n  return firstName + \" \" + parentName + \" \" + grandName + \" \" + familyName;\n};\nexport const frontToBackPatient = patient => {\n  //convert form object to backend object to be sent to the backendAPI\n  return {\n    \"person\": {\n      \"personName\": {\n        \"firstName\": patient.firstName,\n        \"parentName\": patient.parentName,\n        \"grandName\": patient.grandName,\n        \"familyName\": patient.familyName\n      },\n      \"village\": patient.village,\n      \"dateOfBirth\": patient.dateOfBirth,\n      \"gender\": patient.gender,\n      \"socialNumber\": patient.socialNumber,\n      \"mobileNumber\": patient.mobileNumber\n    },\n    \"socialStatus\": patient.socialStatus,\n    \"educationLevel\": patient.educationLevel,\n    \"jobTitle\": patient.jobTitle,\n    \"chronicDisease\": patient.chronicDisease,\n    \"disability\": patient.disability,\n    \"partnerRelation\": patient.partnerRelation,\n    \"smoker\": patient.smoker,\n    \"bloodGroup\": patient.bloodGroup,\n    \"allergies\": patient.allergies\n  };\n};\nexport const backToFrontPatient = patient => {\n  //convert backend object to form object\n  //just pass the res from the backend response\n  return {\n    firstName: patient.data.person.personName.firstName,\n    parentName: patient.data.person.personName.parentName,\n    grandName: patient.data.person.personName.grandName,\n    familyName: patient.data.person.personName.familyName,\n    gender: patient.data.person.gender,\n    dateOfBirth: patient.data.person.dateOfBirth,\n    mobileNumber: patient.data.person.mobileNumber,\n    allergies: patient.data.allergies,\n    village: patient.data.person.village,\n    bloodGroup: patient.data.bloodGroup,\n    socialNumber: patient.data.person.socialNumber,\n    socialStatus: patient.data.socialStatus,\n    educationLevel: patient.data.educationLevel,\n    jobTitle: patient.data.jobTitle,\n    chronicDisease: patient.data.chronicDisease,\n    disability: patient.data.disability,\n    partnerRelation: patient.data.partnerRelation,\n    smoker: patient.data.smoker\n  };\n};\nexport const frontToBackEmployee = employee => {\n  //convert form object to backend object to be sent to the backendAPI\n  return {\n    \"person\": {\n      \"personName\": {\n        \"firstName\": employee.firstName,\n        \"parentName\": employee.parentName,\n        \"grandName\": employee.grandName,\n        \"familyName\": employee.familyName\n      },\n      \"village\": employee.village,\n      \"dateOfBirth\": employee.dateOfBirth,\n      \"gender\": employee.gender,\n      \"socialNumber\": employee.socialNumber,\n      \"mobileNumber\": employee.mobileNumber\n    },\n    role: employee.role,\n    certificate: employee.certificate,\n    salary: employee.salary\n  };\n};\nexport const backToFrontEmployee = employee => {\n  //convert backend object to form object\n  //just pass the res from the backend response\n  return {\n    firstName: employee.data.person.personName.firstName,\n    parentName: employee.data.person.personName.parentName,\n    grandName: employee.data.person.personName.grandName,\n    familyName: employee.data.person.personName.familyName,\n    gender: employee.data.person.gender,\n    dateOfBirth: employee.data.person.dateOfBirth,\n    mobileNumber: employee.data.person.mobileNumber,\n    village: employee.data.person.village,\n    socialNumber: employee.data.person.socialNumber,\n    role: employee.data.role,\n    certificate: employee.data.certificate,\n    salary: employee.data.salary\n  };\n};\nexport const getDateFromTimeStamp = timeStamp => {\n  const timestamp = new Date(timeStamp);\n  let formattedTimestamp = Intl.DateTimeFormat('en-PS', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"2-digit\" // hour: \"numeric\",\n    // minute: \"2-digit\"\n\n  }).format(timestamp);\n  return formattedTimestamp;\n};","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/Common Functions/PersonFunctions.js"],"names":["getPersonAge","d","Date","getFullYear","getFullName","name","firstName","parentName","grandName","familyName","frontToBackPatient","patient","village","dateOfBirth","gender","socialNumber","mobileNumber","socialStatus","educationLevel","jobTitle","chronicDisease","disability","partnerRelation","smoker","bloodGroup","allergies","backToFrontPatient","data","person","personName","frontToBackEmployee","employee","role","certificate","salary","backToFrontEmployee","getDateFromTimeStamp","timeStamp","timestamp","formattedTimestamp","Intl","DateTimeFormat","year","month","day","format"],"mappings":"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","sourcesContent":["//this method receive the person birth date and calculate his age\r\n\r\nexport const getPersonAge = (d) => {\r\n    return new Date().getFullYear() - new Date(d).getFullYear()\r\n}\r\n\r\nexport const getFullName = (name) => {\r\n    const {firstName, parentName, grandName, familyName} = name;\r\n    return firstName + \" \" + parentName + \" \" + grandName + \" \" + familyName;\r\n}\r\nexport const frontToBackPatient = (patient) => {//convert form object to backend object to be sent to the backendAPI\r\n    return {\r\n        \"person\": {\r\n            \"personName\": {\r\n                \"firstName\": patient.firstName,\r\n                \"parentName\": patient.parentName,\r\n                \"grandName\": patient.grandName,\r\n                \"familyName\": patient.familyName\r\n            },\r\n            \"village\": patient.village,\r\n            \"dateOfBirth\": patient.dateOfBirth,\r\n            \"gender\": patient.gender,\r\n            \"socialNumber\": patient.socialNumber,\r\n            \"mobileNumber\": patient.mobileNumber\r\n        },\r\n        \"socialStatus\": patient.socialStatus,\r\n        \"educationLevel\": patient.educationLevel,\r\n        \"jobTitle\": patient.jobTitle,\r\n        \"chronicDisease\": patient.chronicDisease,\r\n        \"disability\": patient.disability,\r\n        \"partnerRelation\": patient.partnerRelation,\r\n        \"smoker\": patient.smoker,\r\n        \"bloodGroup\": patient.bloodGroup,\r\n        \"allergies\": patient.allergies\r\n\r\n    };\r\n\r\n}\r\nexport const backToFrontPatient = (patient) => {//convert backend object to form object\r\n//just pass the res from the backend response\r\n    return {\r\n        firstName: patient.data.person.personName.firstName,\r\n        parentName: patient.data.person.personName.parentName,\r\n        grandName: patient.data.person.personName.grandName,\r\n        familyName: patient.data.person.personName.familyName,\r\n        gender: patient.data.person.gender,\r\n        dateOfBirth: patient.data.person.dateOfBirth,\r\n        mobileNumber: patient.data.person.mobileNumber,\r\n        allergies: patient.data.allergies,\r\n        village: patient.data.person.village,\r\n        bloodGroup: patient.data.bloodGroup,\r\n        socialNumber: patient.data.person.socialNumber,\r\n        socialStatus: patient.data.socialStatus,\r\n        educationLevel: patient.data.educationLevel,\r\n        jobTitle: patient.data.jobTitle,\r\n        chronicDisease: patient.data.chronicDisease,\r\n        disability: patient.data.disability,\r\n        partnerRelation: patient.data.partnerRelation,\r\n        smoker: patient.data.smoker,\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const frontToBackEmployee = (employee) => {//convert form object to backend object to be sent to the backendAPI\r\n   return {\r\n        \"person\": {\r\n            \"personName\": {\r\n                \"firstName\": employee.firstName,\r\n                \"parentName\": employee.parentName,\r\n                \"grandName\": employee.grandName,\r\n                \"familyName\": employee.familyName\r\n            },\r\n            \"village\": employee.village,\r\n            \"dateOfBirth\": employee.dateOfBirth,\r\n            \"gender\": employee.gender,\r\n            \"socialNumber\": employee.socialNumber,\r\n            \"mobileNumber\": employee.mobileNumber\r\n        },\r\n       role: employee.role,\r\n       certificate: employee.certificate,\r\n       salary: employee.salary\r\n\r\n    }\r\n}\r\n\r\nexport const backToFrontEmployee = (employee) => {//convert backend object to form object\r\n//just pass the res from the backend response\r\n    return {\r\n        firstName: employee.data.person.personName.firstName,\r\n        parentName: employee.data.person.personName.parentName,\r\n        grandName: employee.data.person.personName.grandName,\r\n        familyName: employee.data.person.personName.familyName,\r\n        gender: employee.data.person.gender,\r\n        dateOfBirth: employee.data.person.dateOfBirth,\r\n        mobileNumber: employee.data.person.mobileNumber,\r\n        village: employee.data.person.village,\r\n        socialNumber: employee.data.person.socialNumber,\r\n        role: employee.data.role,\r\n        certificate: employee.data.certificate,\r\n        salary: employee.data.salary\r\n\r\n    }\r\n}\r\n\r\nexport const getDateFromTimeStamp=(timeStamp) => {\r\n    const timestamp = new Date(timeStamp);\r\n    let formattedTimestamp = Intl.DateTimeFormat('en-PS', {\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"2-digit\",\r\n        // hour: \"numeric\",\r\n        // minute: \"2-digit\"\r\n    }).format(timestamp);\r\n    return  formattedTimestamp\r\n\r\n}"]},"metadata":{},"sourceType":"module"}