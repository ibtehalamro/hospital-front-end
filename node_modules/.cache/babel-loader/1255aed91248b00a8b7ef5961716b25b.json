{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\majdee\\\\OneDrive\\\\prpogramming projects\\\\Hospital project with sass\\\\front\\\\ui\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport React, { Suspense } from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router\";\nimport store from \"./Redux/Store\";\nimport { clinicsURLs as clinicsURL, dashboard, employeeURLS, invoicesURL, patientURLS, waitingQueueURLs } from \"./Constants/URLConstants\";\nimport { Provider, useSelector } from \"react-redux\";\nimport LandingPage from \"./Components/User Management/LandingPage\";\nimport RegisterPage from \"./Components/User Management/RegisterPage\";\nimport LoginPage from \"./Components/User Management/LoginPage\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER } from \"./Redux/Types/Types\";\nimport setJWTToken from \"./Components/User Management/Security/setJWTToken\";\nimport { logout } from \"./Redux/Actions/SecurityActions\";\nimport SecuredRoute from \"./Components/User Management/Security/SecureRoute\";\nimport ErrorRoute from \"./Components/Error Components/ErrorRoute\";\nimport Dashboard from \"./Components/Main Content/Dashboard/Dashboard\";\nconst patient = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"patient-component\" */\n'./Components/Main Content/Patient/PatientRouter'));\nconst employee = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"employee-component\" */\n'./Components/Main Content/Employee/EmployeeRouter'));\nconst waitingQueue = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"waitingQueue-component\" */\n'./Components/Main Content/Waiting Queue/WaitingQueueRouter'));\nconst clinics = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"clinics-component\" */\n'./Components/Main Content/Clinics Components/ClinicsRouter'));\nconst invoices = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"invoices-component\" */\n'./Components/Main Content/Invoices/InvoicesRouter'));\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now() / 1000;\n\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout\n    store.dispatch(logout());\n    window.location.href = \"/landing\";\n  }\n}\n\nfunction App() {\n  _s();\n\n  const security = useSelector(state => state.security);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"application\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/landing\",\n              component: LandingPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/register\",\n              component: RegisterPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/login\",\n              component: LoginPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \" Loading .......\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 45\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                children: [/*#__PURE__*/_jsxDEV(SecuredRoute, {\n                  exact: true,\n                  path: dashboard.dashboard,\n                  security: security,\n                  component: Dashboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                  exact: true,\n                  path: patientURLS.patient,\n                  security: security,\n                  component: patient\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                  exact: true,\n                  path: employeeURLS.employee,\n                  security: security,\n                  component: employee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                  exact: true,\n                  path: waitingQueueURLs.waitingQueue,\n                  security: security,\n                  component: waitingQueue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                  exact: true,\n                  path: clinicsURL.clinic,\n                  security: security,\n                  component: clinics\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(SecuredRoute, {\n                  exact: true,\n                  path: invoicesURL.invoice,\n                  security: security,\n                  component: invoices\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 33\n                }, this), \"default:\", /*#__PURE__*/_jsxDEV(Route, {\n                  security: security,\n                  component: ErrorRoute\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"R7rVgD4vKyEkXz3y+Y0M39hWsW8=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/majdee/OneDrive/prpogramming projects/Hospital project with sass/front/ui/src/App.js"],"names":["React","Suspense","Header","BrowserRouter","Route","Switch","store","clinicsURLs","clinicsURL","dashboard","employeeURLS","invoicesURL","patientURLS","waitingQueueURLs","Provider","useSelector","LandingPage","RegisterPage","LoginPage","jwt_decode","SET_CURRENT_USER","setJWTToken","logout","SecuredRoute","ErrorRoute","Dashboard","patient","lazy","employee","waitingQueue","clinics","invoices","jwtToken","localStorage","decoded_jwtToken","dispatch","type","payload","currentTime","Date","now","exp","window","location","href","App","security","state","clinic","invoice"],"mappings":"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","sourcesContent":["import './App.scss';\nimport React, {Suspense} from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Route, Switch} from \"react-router\";\nimport store from \"./Redux/Store\";\n\nimport {\n    clinicsURLs as clinicsURL,\n    dashboard,\n    employeeURLS,\n    invoicesURL,\n    patientURLS,\n    waitingQueueURLs\n} from \"./Constants/URLConstants\";\nimport {Provider, useSelector} from \"react-redux\";\nimport LandingPage from \"./Components/User Management/LandingPage\";\nimport RegisterPage from \"./Components/User Management/RegisterPage\";\nimport LoginPage from \"./Components/User Management/LoginPage\";\n\nimport jwt_decode from \"jwt-decode\";\nimport {SET_CURRENT_USER} from \"./Redux/Types/Types\";\nimport setJWTToken from \"./Components/User Management/Security/setJWTToken\";\nimport {logout} from \"./Redux/Actions/SecurityActions\";\nimport SecuredRoute from \"./Components/User Management/Security/SecureRoute\";\nimport ErrorRoute from \"./Components/Error Components/ErrorRoute\";\nimport Dashboard from \"./Components/Main Content/Dashboard/Dashboard\";\n\nconst patient = React.lazy(() => import(/* webpackChunkName: \"patient-component\" */ './Components/Main Content/Patient/PatientRouter'));\nconst employee = React.lazy(() => import(/* webpackChunkName: \"employee-component\" */  './Components/Main Content/Employee/EmployeeRouter'));\nconst waitingQueue = React.lazy(() => import(/* webpackChunkName: \"waitingQueue-component\" */  './Components/Main Content/Waiting Queue/WaitingQueueRouter'));\nconst clinics = React.lazy(() => import( /* webpackChunkName: \"clinics-component\" */ './Components/Main Content/Clinics Components/ClinicsRouter'));\nconst invoices = React.lazy(() => import( /* webpackChunkName: \"invoices-component\" */ './Components/Main Content/Invoices/InvoicesRouter'));\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n    setJWTToken(jwtToken);\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n        //handle logout\n        store.dispatch(logout())\n        window.location.href = \"/landing\";\n    }\n}\n\nfunction App() {\n\n    const security = useSelector(state => state.security);\n\n    return (\n        <div className=\"application\">\n            <Provider store={store}>\n\n            <BrowserRouter>\n                <Header/>\n                <main className=\"main-content\">\n                    <Switch>\n                        <Route exact path={\"/landing\"} component={LandingPage}/>\n                        <Route exact path={\"/register\"} component={RegisterPage}/>\n                        <Route exact path={\"/login\"} component={LoginPage}/>\n\n                        <Suspense fallback={<div> Loading .......</div>}>\n                            <Switch>\n                                {/*Dashboard routes*/}\n                                <SecuredRoute exact path={dashboard.dashboard} security={security} component={Dashboard}/>\n\n                                {/*patient routes*/}\n                                <SecuredRoute exact path={patientURLS.patient} security={security} component={patient}/>\n\n                                {/*employee routes*/}\n                                <SecuredRoute exact path={employeeURLS.employee} security={security} component={employee}/>\n\n                                {/*waiting queue routers*/}\n                                <SecuredRoute exact path={waitingQueueURLs.waitingQueue} security={security}\n                                              component={waitingQueue}/>\n\n                                {/*clinics routers*/}\n                                <SecuredRoute exact path={clinicsURL.clinic} security={security} component={clinics}/>\n\n                                {/*invoice routers*/}\n                                <SecuredRoute exact path={invoicesURL.invoice} security={security} component={invoices}/>\n                                default:\n\n                                <Route security={security} component={ErrorRoute}/>\n                            </Switch>\n\n                        </Suspense>\n                    </Switch>\n                </main>\n\n            </BrowserRouter>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}